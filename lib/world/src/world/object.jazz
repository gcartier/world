;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Object
;;;


(module world.object jazz


(import (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.jml)
        (jazz.library)
        (jazz.literals)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.window)
        (time)
        (world)
        (world.autoload)
        (world.draw)
        (world.element)
        (world.entity)
        (world.foreign)
        (world.geometry)
        (world.texture))


;;;
;;;; Pyramid
;;;


(class Pyramid extends Entity
  
  
  (method override (draw)
    (glPushMatrix)
    (glTranslatef x y z)
    (glBegin GL_TRIANGLES)
    (gl-plane-normal (vertex  0.0  1.0  0.0)
                     (vertex -1.0 -1.0  1.0)
                     (vertex  1.0 -1.0  1.0))
    (glColor3f 1.0 0.0 0.0)
    (glVertex3f  0.0  1.0  0.0)
    (glColor3f 0.0 1.0 0.0)
    (glVertex3f -1.0 -1.0  1.0)
    (glColor3f 0.0 0.0 1.0)
    (glVertex3f  1.0 -1.0  1.0)
    
    (gl-plane-normal (vertex  0.0  1.0  0.0)
                     (vertex  1.0 -1.0  1.0)
                     (vertex  1.0 -1.0  -1.0))
    (glColor3f 1.0 0.0 0.0)
    (glVertex3f  0.0  1.0  0.0)
    (glColor3f 0.0 0.0 1.0)
    (glVertex3f  1.0 -1.0  1.0)
    (glColor3f 0.0 1.0 0.0)
    (glVertex3f  1.0 -1.0  -1.0)
    
    (gl-plane-normal (vertex  0.0  1.0  0.0)
                     (vertex  1.0 -1.0  -1.0)
                     (vertex -1.0 -1.0  -1.0))
    (glColor3f 1.0 0.0 0.0)
    (glVertex3f  0.0  1.0  0.0)
    (glColor3f 0.0 1.0 0.0)
    (glVertex3f  1.0 -1.0  -1.0)
    (glColor3f 0.0 0.0 1.0)
    (glVertex3f -1.0 -1.0  -1.0)
    
    (gl-plane-normal (vertex  0.0  1.0  0.0)
                     (vertex -1.0 -1.0 -1.0)
                     (vertex -1.0 -1.0  1.0))
    (glColor3f 1.0 0.0 0.0)
    (glVertex3f  0.0  1.0  0.0)
    (glColor3f 0.0 0.0 1.0)
    (glVertex3f -1.0 -1.0 -1.0)
    (glColor3f 0.0 1.0 0.0)
    (glVertex3f -1.0 -1.0  1.0)
    (glEnd)
    (glPopMatrix)))


;;;
;;;; Cube
;;;


(class Cube extends Entity
  
  
  (property left-image   initialize #f accessors generate)
  (property right-image  initialize #f accessors generate)
  (property bottom-image initialize #f accessors generate)
  (property top-image    initialize #f accessors generate)
  (property back-image   initialize #f accessors generate)
  (property front-image  initialize #f accessors generate)
  
  
  (method override (draw)
    (glPushMatrix)
    (glTranslatef x y z)
    (let ((texture (get-texture~ (get-texture-pack~ world))))
      ;; top
      (glNormal3f 0.0 1.0 0.0)
      (textured-quad~ texture
        (lambda () (glVertex3f  2.0  2.0 -2.0))
        (lambda () (glVertex3f -2.0  2.0 -2.0))
        (lambda () (glVertex3f -2.0  2.0  2.0))
        (lambda () (glVertex3f  2.0  2.0  2.0)))
      ;; bottom
      (glNormal3f 0.0 -1.0 0.0)
      (textured-quad~ texture
        (lambda () (glVertex3f  2.0 -2.0  2.0))
        (lambda () (glVertex3f -2.0 -2.0  2.0))
        (lambda () (glVertex3f -2.0 -2.0 -2.0))
        (lambda () (glVertex3f  2.0 -2.0 -2.0)))
      ;; front
      (glNormal3f 0.0 0.0 1.0)
      (textured-quad~ texture
        (lambda () (glVertex3f -2.0 -2.0  2.0))
        (lambda () (glVertex3f  2.0 -2.0  2.0))
        (lambda () (glVertex3f  2.0  2.0  2.0))
        (lambda () (glVertex3f -2.0  2.0  2.0)))
      ;; back
      (glNormal3f 0.0 0.0 -1.0)
      (textured-quad~ texture
        (lambda () (glVertex3f  2.0 -2.0 -2.0))
        (lambda () (glVertex3f -2.0 -2.0 -2.0))
        (lambda () (glVertex3f -2.0  2.0 -2.0))
        (lambda () (glVertex3f  2.0  2.0 -2.0)))
      ;; left
      (glNormal3f -1.0 0.0 0.0)
      (textured-quad~ texture
        (lambda () (glVertex3f -2.0  2.0  2.0))
        (lambda () (glVertex3f -2.0  2.0 -2.0))
        (lambda () (glVertex3f -2.0 -2.0 -2.0))
        (lambda () (glVertex3f -2.0 -2.0  2.0)))
      ;; right
      (glNormal3f 1.0 0.0 0.0)
      (textured-quad~ texture
        (lambda () (glVertex3f  2.0  2.0 -2.0))
        (lambda () (glVertex3f  2.0  2.0  2.0))
        (lambda () (glVertex3f  2.0 -2.0  2.0))
        (lambda () (glVertex3f  2.0 -2.0 -2.0))))
    (glPopMatrix)))


;;;
;;;; Sphere
;;;


(class Sphere extends Entity
  
  
  (property slices <fx> accessors generate)
  (property stacks <fx> accessors generate)
  
  
  (form
    (<install> color: {Color White}))
  
  
  (method override (prepare rest)
    (nextmethod rest)
    (set! slices 26)
    (set! stacks 52))
  
  
  (method override (draw)
    (draw-sphere x y z radius slices stacks color))
  
  
  (method override (inside? r vert)
    (let ((distance (vertex-norm (vertex- vert (vertex x y z)))))
      (<= distance (+ radius r))))))
