;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Object
;;;


(module world.object jazz


(import (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.jml)
        (jazz.library)
        (jazz.literals)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.window)
        (time)
        (world)
        (world.autoload)
        (world.foreign)
        (world.geometry)
        (world.sprite)
        (world.texture))


;;;
;;;; Sphere
;;;


(class Sphere extends Sprite
  
  
  (property slices <fx> accessors generate)
  (property stacks <fx> accessors generate)
  
  
  (form
    (<install> color: {Color White}))
  
  
  (method override (draw)
    (draw-sphere x y z radius slices stacks color))
  
  
  (method override (inside? r vert)
    (let ((distance (vertex-norm (vertex- vert (vertex x y z)))))
      (<= distance (+ radius r)))))


(definition public (draw-sphere x y z radius slices stacks color)
  (glPushMatrix)
  (glTranslatef x y z)
  (gl-colorize color)
  (gl-sphere radius slices stacks)
  (glPopMatrix))


;;;
;;;; Pyramid
;;;


(class Pyramid extends Sprite
  
  
  (method override (draw)
    (glPushMatrix)
    (glTranslatef x y z)
    (glRotatef rtri 0.0 1.0 0.0)
    (glScalef 0.5 0.5 0.5)
    (glBegin GL_TRIANGLES)
    (gl-plane-normal (vertex  0.0  1.0  0.0)
                     (vertex -1.0 -1.0  1.0)
                     (vertex  1.0 -1.0  1.0))
    (glColor3f 1.0 0.0 0.0)
    (glVertex3f  0.0  1.0  0.0)
    (glColor3f 0.0 1.0 0.0)
    (glVertex3f -1.0 -1.0  1.0)
    (glColor3f 0.0 0.0 1.0)
    (glVertex3f  1.0 -1.0  1.0)
    
    (gl-plane-normal (vertex  0.0  1.0  0.0)
                     (vertex  1.0 -1.0  1.0)
                     (vertex  1.0 -1.0  -1.0))
    (glColor3f 1.0 0.0 0.0)
    (glVertex3f  0.0  1.0  0.0)
    (glColor3f 0.0 0.0 1.0)
    (glVertex3f  1.0 -1.0  1.0)
    (glColor3f 0.0 1.0 0.0)
    (glVertex3f  1.0 -1.0  -1.0)
    
    (gl-plane-normal (vertex  0.0  1.0  0.0)
                     (vertex  1.0 -1.0  -1.0)
                     (vertex -1.0 -1.0  -1.0))
    (glColor3f 1.0 0.0 0.0)
    (glVertex3f  0.0  1.0  0.0)
    (glColor3f 0.0 1.0 0.0)
    (glVertex3f  1.0 -1.0  -1.0)
    (glColor3f 0.0 0.0 1.0)
    (glVertex3f -1.0 -1.0  -1.0)
    
    (gl-plane-normal (vertex  0.0  1.0  0.0)
                     (vertex -1.0 -1.0 -1.0)
                     (vertex -1.0 -1.0  1.0))
    (glColor3f 1.0 0.0 0.0)
    (glVertex3f  0.0  1.0  0.0)
    (glColor3f 0.0 0.0 1.0)
    (glVertex3f -1.0 -1.0 -1.0)
    (glColor3f 0.0 1.0 0.0)
    (glVertex3f -1.0 -1.0  1.0)
    (glEnd)
    (glPopMatrix)
    (when (get-animate?~ world)
      (increase! rtri 0.2)
      (decrease! rquad 0.15))))


;;;
;;;; Cube
;;;


(class Cube extends Sprite
  
  
  (method override (prepare rest)
    (nextmethod rest)
    @w(let ((images-dir {Directory Settings "resources" "images"}))
      (set! left   (make-png-texture (new-file~ images-dir "image1.png") (get-texture-program~ world) (get-texture-location~ world)))
      (set! front  (make-png-texture (new-file~ images-dir "image2.png")))
      (set! right  (make-png-texture (new-file~ images-dir "image3.png")))
      (set! back   (make-png-texture (new-file~ images-dir "image4.png")))
      (set! bottom (make-png-texture (new-file~ images-dir "image5.png")))
      (set! top    (make-png-texture (new-file~ images-dir "image6.png")))))
  
  
  (method override (draw)
    (glPushMatrix)
    (glTranslatef x y z)
    (glRotatef rtri 1.0 1.0 1.0)
    (glScalef 1.0 1.0 1.0)
    ;; top
    (glNormal3f 0.0 1.0 0.0)
    (textured-quad~ top
      (lambda () (glVertex3f  2.0  2.0 -2.0))
      (lambda () (glVertex3f -2.0  2.0 -2.0))
      (lambda () (glVertex3f -2.0  2.0  2.0))
      (lambda () (glVertex3f  2.0  2.0  2.0)))
    ;; bottom
    (glNormal3f 0.0 -1.0 0.0)
    (textured-quad~ bottom
      (lambda () (glVertex3f  2.0 -2.0  2.0))
      (lambda () (glVertex3f -2.0 -2.0  2.0))
      (lambda () (glVertex3f -2.0 -2.0 -2.0))
      (lambda () (glVertex3f  2.0 -2.0 -2.0)))
    ;; front
    (glNormal3f 0.0 0.0 1.0)
    (textured-quad~ front
      (lambda () (glVertex3f -2.0 -2.0  2.0))
      (lambda () (glVertex3f  2.0 -2.0  2.0))
      (lambda () (glVertex3f  2.0  2.0  2.0))
      (lambda () (glVertex3f -2.0  2.0  2.0)))
    ;; back
    (glNormal3f 0.0 0.0 -1.0)
    (textured-quad~ back
      (lambda () (glVertex3f  2.0 -2.0 -2.0))
      (lambda () (glVertex3f -2.0 -2.0 -2.0))
      (lambda () (glVertex3f -2.0  2.0 -2.0))
      (lambda () (glVertex3f  2.0  2.0 -2.0)))
    ;; left
    (glNormal3f -1.0 0.0 0.0)
    (textured-quad~ left
      (lambda () (glVertex3f -2.0  2.0  2.0))
      (lambda () (glVertex3f -2.0  2.0 -2.0))
      (lambda () (glVertex3f -2.0 -2.0 -2.0))
      (lambda () (glVertex3f -2.0 -2.0  2.0)))
    ;; right
    (glNormal3f 1.0 0.0 0.0)
    (textured-quad~ right
      (lambda () (glVertex3f  2.0  2.0 -2.0))
      (lambda () (glVertex3f  2.0  2.0  2.0))
      (lambda () (glVertex3f  2.0 -2.0  2.0))
      (lambda () (glVertex3f  2.0 -2.0 -2.0)))
    (glPopMatrix)
    (when (get-animate?~ world)
      (increase! rtri 0.4)
      (decrease! rquad 0.3))))


(definition public (render-cube left bottom back right top front proc)
  ;; top
  (glNormal3f 0.0 1.0 0.0)
  (proc
    (lambda ()
      (glVertex3f right top back)
      (glVertex3f left  top back)
      (glVertex3f left  top front)
      (glVertex3f right top front)))
  ;; bottom
  (glNormal3f 0.0 -1.0 0.0)
  (proc
    (lambda ()
      (glVertex3f right bottom front)
      (glVertex3f left  bottom front)
      (glVertex3f left  bottom back)
      (glVertex3f right bottom back)))
  ;; front
  (glNormal3f 0.0 0.0 1.0)
  (proc
    (lambda ()
      (glVertex3f left  bottom front)
      (glVertex3f right bottom front)
      (glVertex3f right top    front)
      (glVertex3f left  top    front)))
  ;; back
  (glNormal3f 0.0 0.0 -1.0)
  (proc
    (lambda ()
      (glVertex3f right bottom back)
      (glVertex3f left  bottom back)
      (glVertex3f left  top    back)
      (glVertex3f right top    back)))
  ;; left
  (glNormal3f -1.0 0.0 0.0)
  (proc
    (lambda ()
      (glVertex3f left top    front)
      (glVertex3f left top    back)
      (glVertex3f left bottom back)
      (glVertex3f left bottom front)))
  ;; right
  (glNormal3f 1.0 0.0 0.0)
  (proc
    (lambda ()
      (glVertex3f right top    back)
      (glVertex3f right top    front)
      (glVertex3f right bottom front)
      (glVertex3f right bottom back))))


;;;
;;;; Wall
;;;


(class Wall extends Sprite
  
  
  (property rotation <f32vector+> accessors generate)
  (property scale-x  <fl>         accessors generate)
  (property scale-y  <fl>         accessors generate)
  
  
  (form
    (<install> color: {Color White}))
  
  
  (method override (draw)
    (glPushMatrix)
    (glTranslatef x y z)
    (when rotation
      (glRotatef (vertex-x rotation) 1.0 0.0 0.0)
      (glRotatef (vertex-y rotation) 0.0 1.0 0.0)
      (glRotatef (vertex-z rotation) 0.0 0.0 1.0))
    (glScalef scale-x scale-y 1.0)
    (glNormal3f 0.0 0.0 1.0)
    (gl-colorize color)
    (glBegin GL_QUADS)
    (glVertex3f  1.0  -1.0 0.0)
    (glVertex3f -1.0  -1.0 0.0)
    (glVertex3f -1.0  1.0  0.0)
    (glVertex3f  1.0  1.0  0.0)
    (glEnd)
    (glPopMatrix))))
