;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Serialization
;;;


(module world.serialization jazz


(import (jazz.geometry)
        (jazz.io)
        (jazz.library)
        (world)
        (world.syntax (phase syntax)))


;;;
;;;; Serialize
;;;


(definition public (serialize obj)
  (or (marshall-object~ (class-of obj) obj)
      (if (object? obj)
          (error "Unable to serialize: {a}" obj)
        obj)))


;;;
;;;; Deserialize
;;;


(definition public (deserialize obj)
  (if (serialized? obj)
      (let ((class (deserialize-class (serialized-class obj)))
            (content (serialized-content obj)))
        (or (unmarshall-object~ class content)
            (error "Unable to deserialize: {a}" (category-name class))))
    obj)))
