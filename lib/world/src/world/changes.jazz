;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Changes
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.changes jazz


(import (world)
        (world.autoload)
        (world.change)
        (world.entity)
        (world.geometry)
        (world.syntax (phase syntax)))


(define-change move
  forward: (lambda (get)
             (let ((entity (id->entity (flonum->fixnum (get 0)))))
               (set-position~ entity (vertex& (get 1) (get 2) (get 3)))))
  backward: (lambda (get)
             (let ((entity (id->entity (flonum->fixnum (get 0)))))
               (set-position~ entity (vertex& (get 1) (get 2) (get 3))))))


(define-change add
  forward: (lambda (get)
             (let ((pos (vertex& (get 0) (get 1) (get 2)))
                   (id (flonum->fixnum (get 3)))
                   (data-id (flonum->fixnum (get 4))))
               (apply-add-block~ (current-game) pos id data-id)))
  backward: (lambda (get)
              (let ((pos (vertex& (get 0) (get 1) (get 2)))
                    (replaced (flonum->fixnum (get 3)))
                    (replaced-data (flonum->fixnum (get 4))))
                (apply-restore-block~ (current-game) pos replaced replaced-data))))


(define-change delete
  forward: (lambda (get)
             (let ((pos (vertex& (get 0) (get 1) (get 2))))
               (apply-delete-block~ (current-game) pos)))
  backward: (lambda (get)
              (let ((pos (vertex& (get 0) (get 1) (get 2)))
                    (block-id (flonum->fixnum (get 3)))
                    (data-id (flonum->fixnum (get 4))))
                (apply-restore-block~ (current-game) pos block-id data-id)))))
