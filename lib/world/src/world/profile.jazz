;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Profile
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.profile jazz


(import (jazz.event)
        (jazz.snapshot)
        (jazz.settings)
        (world)
        (world.context)
        (world.settings)
        (world.task))


;;                  base-profile
;;
;; +--------+--------+--------+--------+--------+
;; |  poor  |  low   | medium |  good  |  high  |
;; +--------+--------+--------+--------+--------+
;;              ^        ^        ^
;;             user    upper  effective


;; limit base profile for early adoption
(definition (limit-base-profile profile)
  (cond-expand
    (devel profile)
    (else (if (eq? profile 'poor)
              'poor
            'low))))


(definition protected user-base-profile
  (let ((explicit-profile (world-setting 'world.base-profile #f)))
    (let ((profile (or explicit-profile (find-setting 'caps.profile.base))))
      (limit-base-profile profile))))

(add-snapshot-property 'live.profile user-base-profile)

(definition protected (set-user-base-profile profile)
  (set! user-base-profile profile)
  (add-snapshot-property 'live.profile profile))


;; let user go one up from his base profile
(definition protected upper-base-profile
  (case user-base-profile
    ((poor) 'low)
    (else 'medium)))


(definition protected adaptive?
  #f
  @version0
  (if (server?)
      #f
    (world-setting 'world.adaptive? #t)))

(definition protected adaptive-higher
  (world-setting 'world.adaptive-higher 2))

(definition protected adaptive-lower
  (world-setting 'world.adaptive-lower 9))


(definition protected maximum-base-profile
  (if (not adaptive?)
      upper-base-profile
    (case upper-base-profile
      ((poor) 'low)
      (else 'medium))))


(definition protected (determine-effective-base-profile video-count)
  (if (not adaptive?)
      user-base-profile
    (cond ;; higher
          ((<= video-count adaptive-higher)
           (case user-base-profile
             ((poor) 'low)
             (else 'medium)))
          ;; normal
          ((< video-count adaptive-lower)
           user-base-profile)
          ;; lower
          (else
           (case user-base-profile
             ((medium) 'low)
             (else 'poor))))))


(definition protected effective-base-profile
  user-base-profile)

(definition protected (set-effective-base-profile profile)
  (set! effective-base-profile profile))


(definition protected (effective-base-profile-update)
  (delay-event
    (lambda ()
      (with-task-mutex
        (lambda ()
          (when (client?)
            (update-effective-base-profile (current-client))))))))


;;;
;;;; Profile
;;;


(class Graphic-Profile extends Object
  
  
  (slot name   getter generate)
  (slot level  getter generate)
  (slot skybox getter generate)
  
  
  (method override (initialize self name level skybox)
    (nextmethod self)
    (set! self.name name)
    (set! self.level level)
    (set! self.skybox skybox))
  
  
  (method override (print self output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a} {a}" name level)))))


;;;
;;;; Profiles
;;;


(definition public graphic-profile
  (world-setting 'world.graphic-profile (find-setting 'caps.profile.graphic effective-base-profile)))

(definition protected (change-graphic-profile profile)
  (set! graphic-profile profile))


(definition protected graphic-profile-names
  (make-table test: eq?))


(definition protected (register-graphic-profile profile)
  (table-set! graphic-profile-names (get-name profile) profile))

(definition protected (name->graphic-profile name)
  (table-ref graphic-profile-names name))


(definition public (active-graphic-profile)
  (name->graphic-profile graphic-profile))

(definition public (graphic-profile-level)
  (get-level (active-graphic-profile)))


(register-graphic-profile (new Graphic-Profile 'high   4 #f))
(register-graphic-profile (new Graphic-Profile 'good   3 #f))
(register-graphic-profile (new Graphic-Profile 'medium 2 #f))
(register-graphic-profile (new Graphic-Profile 'low    1 #f))

;; nebula is smaller 1024x1024 than the other skyboxes
(register-graphic-profile (new Graphic-Profile 'poor   0 "world/nebula")))
