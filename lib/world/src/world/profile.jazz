;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Profile
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.profile jazz


(import (jazz.event)
        (jazz.settings)
        (world)
        (world.context)
        (world.settings)
        (world.task))


;; limit base profile for early adoption
(definition (limit-base-profile profile explicit?)
  (cond-expand
    (devel profile)
    (else (cond ((and (developer?) explicit?)
                 profile)
                ((eq? profile 'poor)
                 'poor)
                (else
                 'low)))))


(definition protected initial-base-profile
  (let ((explicit-profile (world-setting 'world.base-profile #f)))
    (let ((profile (or explicit-profile (find-setting 'caps.profile.base)))
          (explicit? (boolean explicit-profile)))
      (limit-base-profile profile explicit?))))


(definition protected user-base-profile
  initial-base-profile)

(definition protected (set-user-base-profile profile)
  (set! user-base-profile profile))


(definition protected adaptive?
  (if (server?)
      #f
    #t))

(definition protected adaptive-higher
  (world-setting 'world.adaptive-higher 2))

(definition protected adaptive-lower
  (world-setting 'world.adaptive-lower 9))


(definition protected maximum-base-profile
  (if (not adaptive?)
      initial-base-profile
    (case initial-base-profile
      ((poor) 'low)
      (else 'medium))))


(definition protected (effective-base-profile video-count)
  (if (not adaptive?)
      user-base-profile
    (cond ;; higher
          ((<= video-count adaptive-higher)
           (case user-base-profile
             ((poor) 'low)
             (else 'medium)))
          ;; normal
          ((< video-count adaptive-lower)
           user-base-profile)
          ;; lower
          (else
           (case user-base-profile
             ((medium) 'low)
             (else 'poor))))))


(definition protected base-profile
  user-base-profile)

(definition protected (set-base-profile profile)
  (set! base-profile profile))


(definition protected (base-profile-update)
  (delay-event
    (lambda ()
      (with-task-mutex
        (lambda ()
          (update-base-profile (current-client)))))))


;;;
;;;; Profile
;;;


(class Graphic-Profile extends Object
  
  
  (slot name   getter generate)
  (slot skybox getter generate)
  
  
  (method override (initialize self name skybox)
    (nextmethod self)
    (set! self.name name)
    (set! self.skybox skybox))
  
  
  (method override (print self output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a}" name)))))


;;;
;;;; Profiles
;;;


(definition public graphic-profile
  (world-setting 'world.graphic-profile (find-setting 'caps.profile.graphic base-profile)))

(definition protected (change-graphic-profile profile)
  (set! graphic-profile profile))


(definition protected graphic-profile-names
  (make-table test: eq?))


(definition protected (register-graphic-profile profile)
  (table-set! graphic-profile-names (get-name profile) profile))

(definition protected (name->graphic-profile name)
  (table-ref graphic-profile-names name))


(definition public (active-graphic-profile)
  (name->graphic-profile graphic-profile))


(register-graphic-profile (new Graphic-Profile 'high   #f))
(register-graphic-profile (new Graphic-Profile 'good   #f))
(register-graphic-profile (new Graphic-Profile 'medium #f))
(register-graphic-profile (new Graphic-Profile 'low    #f))

;; nebula is smaller 1024x1024 than the other skyboxes
(register-graphic-profile (new Graphic-Profile 'poor   "nebula")))
