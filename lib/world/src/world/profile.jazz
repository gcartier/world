;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Profile
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.profile jazz


(import (jazz.event)
        (jazz.snapshot)
        (jazz.settings)
        (world)
        (world.context)
        (world.settings)
        (world.task))


;;;
;;;; Graphic
;;;


(class Graphic-Profile extends Object
  
  
  (slot name   getter generate)
  (slot level  getter generate)
  (slot skybox getter generate)
  
  
  (method override (initialize self name level skybox)
    (nextmethod self)
    (set! self.name name)
    (set! self.level level)
    (set! self.skybox skybox))
  
  
  (method override (print self output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a} {a}" name level)))))


;; limit to standard for early adoption
(definition (limit-graphic-profile profile)
  (cond-expand
    (devel profile)
    (else (if (or (eq? profile 'low)
                  (eq? profile 'medium))
              profile
            'standard))))


(definition protected explicit-graphic-profile
  (world-setting 'world.graphic-profile #f))


(definition protected graphic-profile
  (let ((profile (or explicit-graphic-profile (find-setting 'caps.profile.graphic 'standard))))
    (if (eq? profile 'full)
        (error "High has a red-shifted effect on camera self low")
      (limit-graphic-profile profile))))

(add-snapshot-property 'live.graphic-profile graphic-profile)

(definition protected (set-graphic-profile profile)
  (set! graphic-profile profile)
  (add-snapshot-property 'live.graphic-profile profile))


(definition protected graphic-profile-names
  (make-table test: eq?))


(definition protected (register-graphic-profile profile)
  (table-set! graphic-profile-names (get-name profile) profile))

(definition protected (name->graphic-profile name)
  (table-ref graphic-profile-names name))


(definition public (active-graphic-profile)
  (name->graphic-profile graphic-profile))


(register-graphic-profile (new Graphic-Profile 'full     4 #f))
(register-graphic-profile (new Graphic-Profile 'high     3 #f))
(register-graphic-profile (new Graphic-Profile 'standard 2 #f))
(register-graphic-profile (new Graphic-Profile 'medium   1 #f))

;; nebula is smaller 1024x1024 than the other skyboxes
(register-graphic-profile (new Graphic-Profile 'low      0 "world/nebula"))


;;;
;;;; Upload
;;;


(definition protected (determine-upload-profile)
  graphic-profile)


(definition protected upload-profile
  graphic-profile)

(definition protected (set-upload-profile profile)
  (set! upload-profile profile))


(definition protected (upload-profile-update (profile #f))
  (delay-event
    (lambda ()
      (with-task-mutex
        (lambda ()
          (when (client?)
            (update-upload-profile (current-client) profile)))))))


;; let user go one up from his graphic profile
(definition protected maximum-upload-profile
  (if (eq? explicit-graphic-profile 'high)
      (case graphic-profile
        ((low) 'medium)
        ((medium) 'standard)
        (else 'high))
    (case graphic-profile
      ((low) 'medium)
      (else 'standard))))


;;;
;;;; Download
;;;


;;                         profile
;;
;; +----------+----------+----------+----------+----------+
;; |   low    |  medium  | standard |   high   |   full   |
;; +----------+----------+----------+----------+----------+
;;                 ^          ^          ^
;;                user      upper    effective


(definition protected adaptive-higher <fx>
  2)

(definition protected adaptive-lower <fx>
  5)


(definition protected (determine-download-profile video-count)
  (cond ;; higher
        ((<= video-count adaptive-higher)
         (case graphic-profile
           ((low) 'medium)
           (else 'standard)))
        ;; normal
        ((< video-count adaptive-lower)
         graphic-profile)
        ;; lower
        (else
         (case graphic-profile
           ((standard) 'medium)
           (else 'low)))))


(definition protected download-profile
  graphic-profile)

(definition protected (set-download-profile profile)
  (set! download-profile profile))


(definition protected (download-profile-update (profile #f))
  (delay-event
    (lambda ()
      (with-task-mutex
        (lambda ()
          (when (client?)
            (update-download-profile (current-client) profile))))))))
