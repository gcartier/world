;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Support
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.support jazz


(import (jazz.opengl.glew)
        (world.settings))


;;;
;;;; Debugged?
;;;


(definition public being-debugged? <bool>
  #f)

(definition public (set-being-debugged? flag <bool>)
  (set! being-debugged? flag))


;;;
;;;; Synchronized?
;;;


(definition public debug-synchronized?
  (world-setting 'world.debug-synchronized? #f))


;;;
;;;; Render Boost
;;;


(definition public render-boost? <bool>
  #f)

(definition public (set-render-boost? boost? <bool>)
  (set! render-boost? boost?))


;;;
;;;; Player Boost
;;;


(definition public player-boost? <bool>
  #f)

(definition public (set-player-boost? boost? <bool>)
  (set! player-boost? boost?))


;;;
;;;; Texture Arrays
;;;


(definition public texture-arrays? <bool>
  #t)

(definition public (set-texture-arrays? flag <bool>)
  (set! texture-arrays? flag)
  (set! TEXTURE-TARGET (if texture-arrays? GL_TEXTURE_2D_ARRAY_EXT GL_TEXTURE_2D)))

(definition protected TEXTURE-TARGET
  GL_TEXTURE_2D_ARRAY_EXT)


;;;
;;;; Multisampling
;;;


(definition public multisampling? <bool>
  #t)

(definition public (set-multisampling? flag <bool>)
  (set! multisampling? flag))


;;;
;;;; ARB Multisample
;;;


(definition public arb-multisample? <bool>
  #t)

(definition public (set-arb-multisample? flag <bool>)
  (set! arb-multisample? flag))


;;;
;;;; Instanced Rendering
;;;


(definition public instanced-rendering? <bool>
  (world-setting 'world.instanced-rendering? #f))


;;;
;;;; Bones
;;;


(definition public max-bones <fx>
  (world-setting 'world.max-bones 200))


;;;
;;;; Animations
;;;


(definition public animations? <bool>
  #t)

(definition public (set-animations? flag <bool>)
  (set! animations? flag))


;;;
;;;; Shader
;;;


(definition public validate-shaders?
  (world-setting 'world.validate-shaders? #t))


;;;
;;;; Debug B3D
;;;


(definition public debug-b3d? <bool>
  (world-setting 'world.debug-b3d? #f))

(definition public (set-debug-b3d? flag <bool>)
  (set! debug-b3d? flag))


;;;
;;;; Debug MS3D
;;;


(definition public debug-ms3d? <bool>
  (world-setting 'world.debug-ms3d? #f))

(definition public (set-debug-ms3d? flag <bool>)
  (set! debug-ms3d? flag))


;;;
;;;; Mesh Categories
;;;


(definition public mesh-categories? <bool>
  (world-setting 'world.mesh-categories? #f))

(definition public (set-mesh-categories? flag <bool>)
  (set! mesh-categories? flag))


;;;
;;;; Debug Transform
;;;


(definition public debug-transform?
  (world-setting 'world.debug-transform? #f))


;;;
;;;; Debug Deadlocks
;;;


(definition public debug-deadlocks? <bool>
  (world-setting 'world.debug-deadlocks? bot?))

(definition public (set-debug-deadlocks? flag <bool>)
  (set! debug-deadlocks? flag))


;;;
;;;; Block Pumps
;;;


(definition public block-pumps? <bool>
  (world-setting 'world.block-pumps? #f))

(definition public (set-block-pumps? flag <bool>)
  (set! block-pumps? flag))


;;;
;;;; Camera
;;;


(definition independent-camera? <bool>
  #t)

(definition public (get-independent-camera?) <bool>
  independent-camera?)

(definition public (set-independent-camera? flag <bool>)
  (set! independent-camera? flag))


(definition autotrack-mode? <bool>
  #f)

(definition public (get-autotrack-mode?) <bool>
  autotrack-mode?)

(definition public (set-autotrack-mode? flag <bool>)
  (set! autotrack-mode? flag))


(definition autotrack-camera? <bool>
  #f)

(definition public (get-autotrack-camera?) <bool>
  autotrack-camera?)

(definition public (set-autotrack-camera? flag <bool>)
  (set! autotrack-camera? flag))


(definition track-sensitivity <fl>
  200.)

(definition public (get-track-sensitivity) <fl>
  track-sensitivity)

(definition public (set-track-sensitivity sensitivity <fl>)
  (set! track-sensitivity sensitivity))


;;;
;;;; Interaction Distance
;;;


(definition public interaction-distance <fl>
  (world-setting 'world.interaction-distance 8.))


;;;
;;;; Interface Script
;;;


(definition public interface-script?
  #f)


(definition public (set-interface-script? script?)
  (set! interface-script? script?)))
