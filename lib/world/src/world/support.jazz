;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Support
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is WorldScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2014
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See http://github.com/gcartier/world for details.


(module world.support jazz


(import (jazz.graphic.opengl.glew))


;;;
;;;; Render Boost
;;;


(definition public render-boost?
  #f)

(definition public (set-render-boost? boost?)
  (set! render-boost? boost?))


;;;
;;;; Player Boost
;;;


(definition public player-boost?
  #f)

(definition public (set-player-boost? boost?)
  (set! player-boost? boost?))


;;;
;;;; Keys Boost
;;;


(definition public keys-boost?
  #f)

(definition public (set-keys-boost? boost?)
  (set! keys-boost? boost?))


;;;
;;;; Texture Arrays
;;;


(definition texture-arrays?
  #t)

(definition public (get-texture-arrays?)
  texture-arrays?)

(definition public (set-texture-arrays? flag)
  (set! texture-arrays? flag)
  (set! TEXTURE-TARGET (if texture-arrays? GL_TEXTURE_2D_ARRAY_EXT GL_TEXTURE_2D)))

(definition protected TEXTURE-TARGET
  GL_TEXTURE_2D_ARRAY_EXT)


;;;
;;;; ARB Multisample
;;;


(definition arb-multisample?
  #t)

(definition public (get-arb-multisample?)
  arb-multisample?)

(definition public (set-arb-multisample? flag)
  (set! arb-multisample? flag))


;;;
;;;; Animations
;;;


(definition animations?
  #t)

(definition public (get-animations?)
  animations?)

(definition public (set-animations? flag)
  (set! animations? flag))


;;;
;;;; Debug W3D
;;;


(definition debug-w3d?
  #t)

(definition public (get-debug-w3d?)
  debug-w3d?)

(definition public (set-debug-w3d? flag)
  (set! debug-w3d? flag))


;;;
;;;; Debug MS3D
;;;


(definition debug-ms3d?
  #t)

(definition public (get-debug-ms3d?)
  debug-ms3d?)

(definition public (set-debug-ms3d? flag)
  (set! debug-ms3d? flag))


;;;
;;;; Debug Meshes
;;;


(definition debug-meshes?
  #t)

(definition public (get-debug-meshes?)
  debug-meshes?)

(definition public (set-debug-meshes? flag)
  (set! debug-meshes? flag))


;;;
;;;; Debug Lightmap
;;;


(definition debug-lightmap?
  #t)

(definition public (get-debug-lightmap?)
  debug-lightmap?)

(definition public (set-debug-lightmap? flag)
  (set! debug-lightmap? flag))


;;;
;;;; Debug Animations
;;;


(definition debug-animations?
  #t)

(definition public (get-debug-animations?)
  debug-animations?)

(definition public (set-debug-animations? flag)
  (set! debug-animations? flag))


;;;
;;;; Trace Textures
;;;


(definition trace-textures?
  #t)

(definition public (get-trace-textures?)
  trace-textures?)

(definition public (set-trace-textures? flag)
  (set! trace-textures? flag))


;;;
;;;; Task Trace
;;;


(definition task-trace
  #t)

(definition public (get-task-trace)
  task-trace)

(definition public (set-task-trace flag)
  (set! task-trace flag)))
