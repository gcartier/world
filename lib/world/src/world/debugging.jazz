;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Debugging
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.debugging jazz


(import (jazz.snapshot))


(definition public debugging-priority <fl>
  1000.)


(definition package (start-debugging)
  (let ((thread (new-thread run-debugging 'debugging)))
    (thread-base-priority-set! thread debugging-priority)
    (thread-start! thread)))


(definition (run-debugging)
  (declare (proper-tail-calls))
  (let ((task-mutex world.task:task-mutex))
    (let (loop)
      (sleep 2)
      (if (task-mutex-deadlock-detected? task-mutex)
          (error "Task mutex deadlock detected")
        (loop)))))


(definition (task-mutex-deadlock-detected? task-mutex)
  (let ((count (get-snapshot-count)))
    (if (and (not (mutex-lock! task-mutex 30))
             ;; ignore if a snapshot occured
             (= (get-snapshot-count) count))
        #t
      (mutex-unlock! task-mutex)
      #f))))
