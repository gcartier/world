;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Sectors
;;;


(module world.sector jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.library)
        (jazz.literals)
        (jazz.media)
        (jazz.network)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.dialog)
        (jazz.ui.window)
        (time)
        (world)
        (world.autoload)
        (world.actor)
        (world.block)
        (world.client.window)
        (world.foreign)
        (world.geometry)
        (world.history)
        (world.object)
        (world.sprite)
        (world.texture)
        (world.window))


;;;
;;;; Sector
;;;


(class Sector extends Object
  
  
  (slot index  <list>                  getter generate)
  (slot blocks <list>   initialize '() accessors generate)
  (slot vao    <object> initialize #f  accessors generate)
  
  
  (method override (initialize index blocks)
    (set! index~self index)
    (set! blocks~self blocks))
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (let ((blocks (length blocks)))
          (format "{l} with {a} block{a}" index blocks (format-plural blocks))))))))
