;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Script Syntax
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.script.syntax jazz


(import (scheme.syntax-rules (phase syntax)))


(syntax public %%instance
  (lambda (form-src usage-environment macro-environment)
    (let ((name (cadr (source-code form-src)))
          (body (cddr (source-code form-src))))
      (sourcify-if
        `(begin (define ,name (current-instance)) ,@body)
        form-src))))


(syntax public handle
  (lambda (form-src usage-environment macro-environment)
    (let ((form (cadr (source-code form-src)))
          (body (cddr (source-code form-src))))
      (let ((name (source-code (car (source-code form))))
            (parameters (cdr (source-code form))))
        (let ((setter (string->symbol (string-append "set-" (symbol->string name) "-handler"))))
          (sourcify-if
            `(,setter me 'handle (lambda (me ,@parameters) ,@body))
            form-src))))))


(syntax public accept
  (lambda (form-src usage-environment macro-environment)
    (let ((form (cadr (source-code form-src)))
          (body (cddr (source-code form-src))))
      (let ((name (source-code (car (source-code form))))
            (parameters (cdr (source-code form))))
        (let ((setter (string->symbol (string-append "set-" (symbol->string name) "-handler"))))
          (sourcify-if
            `(,setter me 'accept (lambda (me ,@parameters) ,@body))
            form-src)))))))
