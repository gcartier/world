;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Script Contours
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.script.contour jazz


(import (world.contour)
        (world.syntax (phase syntax)))


;;;
;;;; Script
;;;


(define-contour me)
(define-contour (current-player))
(define-contour (script-sleep <period>))


;;;
;;;; Properties
;;;


(define-contour (get object property))
(define-contour (set object property value))


;;;
;;;; Event
;;;


(define-contour (handle <event> <body>))
(define-contour (accept <event> <body>))
(define-contour (interact))
(define-contour (double-click))
(define-contour (power))
(define-contour (unpower))
(define-contour (teleport))
(define-contour (explode))
(define-contour (hit))


;;;
;;;; Interface
;;;


(define-contour (message <msg>))
(define-contour (sound <path>))
(define-contour bark)


;;;
;;;; Zone
;;;


(define-contour (creatures))


;;;
;;;; Actor
;;;


(define-contour fire)
(define-contour fire-at)
(define-contour fire-random)
(define-contour nearest-spawned)


;;;
;;;; Emote
;;;


(define-contour (emote <emote>))
(define-contour applaud)
(define-contour beg)
(define-contour cheer)
(define-contour cry)
(define-contour dance)
(define-contour kneel)
(define-contour laugh)
(define-contour no)
(define-contour point)
(define-contour wave)
(define-contour yes)


;;;
;;;; Move
;;;


(define-contour (walk))
(define-contour (run))
(define-contour (sprint))
(define-contour (stay))
(define-contour (move <distance>))
(define-contour (move-to <target>))
(define-contour (rotate <angle>))
(define-contour (jump))
(define-contour (path))


;;;
;;;; Lookat
;;;


(define-contour lookat-horizon)
(define-contour lookat-player)
(define-contour lookat-target)
(define-contour lookat-rotate)


;;;
;;;; Actor
;;;


(define-contour (near-player?))
(define-contour (get-position <element>))
(define-contour (set-sprint? <actor> <flag>))
(define-contour (set-hover? <actor> <flag>))
(define-contour (set-billboard <actor> <name>))
(define-contour (full-life))


;;;
;;;; Block
;;;


(define-contour (block <i> <j> <k>))
(define-contour (add-block))
(define-contour (delete-block))
(define-contour (change-block))
(define-contour (get-block))
(define-contour (set-block))
(define-contour (set-block-data))
(define-contour (interact-block))


;;;
;;;; Trail
;;;


(define-contour (trail))
(define-contour (untrail))
(define-contour (trail-color <color>))
(define-contour (clear-trail))


;;;
;;;; Plot
;;;


(define-contour (plot-axes))
(define-contour (plot-line <from> <to>))


;;;
;;;; Development
;;;


(define-contour debug)


;;;
;;;; Language
;;;


(define-contour define)
(define-contour (looping))
(define-contour (lambda <arguments> <body>))
(define-contour stop)
(define-contour when)
(define-contour unless)
(define-contour if)
(define-contour and)
(define-contour or)
(define-contour let)
(define-contour let*)
(define-contour letrec)
(define-contour apply)
(define-contour append)
(define-contour assoc)
(define-contour assq)
(define-contour assv)
(define-contour begin)
(define-contour car)
(define-contour cdr)
(define-contour case)
(define-contour cond)
(define-contour cons)
(define-contour eq?)
(define-contour equal?)
(define-contour eqv?)
(define-contour for-each)
(define-contour length)
(define-contour list)
(define-contour list-ref)
(define-contour map)
(define-contour member?)
(define-contour memq?)
(define-contour memv?)
(define-contour not)
(define-contour null?)
(define-contour pair?)
(define-contour reverse)
(define-contour set!)
(define-contour string)
(define-contour string-ref)
(define-contour values)
(define-contour vector)
(define-contour vector-ref))
