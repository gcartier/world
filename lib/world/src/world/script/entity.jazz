;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Script Entities
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.script.entity jazz


(import (jazz.io)
        (world)
        (world.asset)
        (world.autoload)
        (world.entity)
        (world.scripter)
        (world.scripting)
        (world.scriptum)
        (world.syntax (phase syntax)))


(definition protected running-scripts
  (make-table test: asset=? hash: asset-hash))

  ;; sejour quick hack to think through
(definition protected (reset-running-scripts)
  (set! running-scripts (make-table test: asset=? hash: asset-hash)))


(definition public (register-script asset)
  (or (table-ref running-scripts asset #f)
      (let ((entity (new Script-Entity)))
        (new Script parent: entity text: (load-script-text asset))
        (table-set! running-scripts asset entity)
        entity)))


(definition public (launch-script asset)
  (let ((entity (register-script asset)))
    (let ((script (get-script~ entity)))
      (run-task~ entity script))))


(definition public (save-asset-script asset entity)
  (let ((file (get-file~ asset)))
    (call-with-output-file (path-settings file)
      (lambda (output)
        (display (get-text~ (get-script~ entity)) output)))))


;;;
;;;; Script-Entity
;;;


(class Script-Entity extends Entity
  
  
  (method override (task-name)
    'script)
  
  
  (method override (virtual?)
    #t)))
