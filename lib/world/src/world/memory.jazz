;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Memory
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2013
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.memory jazz


(import (gambit.ext))


(definition public (setup-memory)
  @w
  (let ((domain (make-domain)))
    
    ;; choose some parts of foobar to copy
    (copy-to (list-ref foobar 2) STILL domain)
    (copy-to (list-ref foobar 1) PERM domain)
    
    ;; foobar does not yet contain copies
    (pp (map mem-allocated-kind foobar))
    (pp (map mem-allocated-kind (list-ref foobar 2)))
    
    ;; update foobar to point to the permanent copies
    (update-reachable!
      '()
      (lambda (container i obj)
        (or (table-ref (domain-copies domain) obj #f)
            obj)))
    
    ;; foobar now contains copies
    (pp (map mem-allocated-kind foobar))
    (pp (map mem-allocated-kind (list-ref foobar 2)))
    
    ;; test that the copies are correct
    (pp ((list-ref foobar 1) 100))
    (pp foobar)
    
    (pp (list 'bytes-copied= (domain-bytes-copied domain)))
    )))
