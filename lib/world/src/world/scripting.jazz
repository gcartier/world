;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Scripting
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.scripting jazz


(import (world)
        (world.autoload)
        (world.syntax (phase syntax))
        (world.work))


(definition public current-instance
  (make-parameter #f))


(definition public current-event
  (make-parameter #f))


(definition public (evaluate-script actor script)
  (let ((world (current-world)))
    (let ((code (string-append "(script jazz (import (world.script)) (instance me " script " ))")))
      (parameterize ((current-instance actor))
        (continuation-capture
          (lambda (exit)
            (with-exception-catcher
              (lambda (exc)
                (set-script-state~ actor 'error)
                (set-script-reason~ actor (exception-reason exc)))
              (lambda ()
                (worker-evaluate 'jazz code #f 0 0
                  (lambda (reason detail)
                    (set-script-state~ actor 'walk)
                    (set-script-reason~ actor reason)
                    (set-script-detail~ actor detail)
                    (continuation-return exit #f))
                  (lambda (reason)
                    (set-script-state~ actor 'walk)
                    (set-script-reason~ actor reason)
                    (set-script-detail~ actor #f)
                    (continuation-return exit #f)))
                (set-script-state~ actor 'run))))))))))
