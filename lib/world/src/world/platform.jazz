;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Platform Specific
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.platform jazz


(import (jazz.stream))


(definition public (gstreamer-thread? fullname)
  (and (find fullname #\:)
       (not (starts-with? fullname "caulk.messenger.shared"))))


(definition public (gstreamer-streaming-binname id fullname)
  (and fullname
       (gstreamer-thread? fullname)
       (bind (name pad) (split-string fullname #\:)
         (let ((bin (find-streaming-bin id name pad)))
           (and bin
                (gst_object_get_name bin))))))


(definition public (gstreamer-compose-name binname fullname)
  (bind (name pad) (split-string fullname #\:)
    (let ((bin-name (or binname "unknown")))
      (format "<{a}> {a}:{a}" bin-name name pad))))


(definition public (gstreamer-streaming-name id fullname)
  (bind (name pad) (split-string fullname #\:)
    (let ((bin (find-streaming-bin id name pad)))
      (let ((bin-name (if bin (gst_object_get_name bin) "unknown")))
        (format "<{a}> {a}:{a}" bin-name name pad)))))


(definition public (process-threads-cpu threads)
  (bind (main . others) threads
    (let ((main (third main))
          (gstreamer 0.)
          (other 0.))
      (for-each (lambda (thread)
                  (bind (id fullname percentage) thread
                    (let ((fullname (or fullname "")))
                      (if (find fullname #\:)
                          (increase! gstreamer percentage)
                        (increase! other percentage)))))
                others)
      (values main gstreamer other)))))
