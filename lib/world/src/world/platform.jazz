;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Platform Specific
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.platform jazz


(import (jazz.stream))


(definition public (gstreamer-thread? fullname)
  (find fullname #\:))


(definition public (gstreamer-streaming-name fullname)
  (bind (name pad) (split-string fullname #\:)
    (let ((split (split-string name #\%)))
      (if (= (length split) 1)
          "missing explicit name"
        (bind (element id) split
          (let ((bin (id->bin (string->number id))))
            (if (not bin)
                "unknown"
              (let ((bin-name (gst_object_get_name bin)))
                (format "<{a}> {a}:{a}" bin-name element pad)))))))))


(definition public (process-threads-cpu threads)
  (bind (main . others) threads
    (let ((main (second main))
          (gstreamer 0.)
          (other 0.))
      (for-each (lambda (thread)
                  (bind (fullname percentage) thread
                    (let ((fullname (or fullname "")))
                      (if (find fullname #\:)
                          (increase! gstreamer percentage)
                        (increase! other percentage)))))
                others)
      (values main gstreamer other)))))
