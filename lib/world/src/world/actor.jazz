;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Actors
;;;


(module world.actor jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.library)
        (jazz.literals)
        (jazz.media)
        (jazz.network)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.dialog)
        (jazz.ui.window)
        (time)
        (world)
        (world.autoload)
        (world.foreign)
        (world.geometry)
        (world.object)
        (world.sprite)
        (world.texture)
        (world.window)
        (world.client.window))


;;;
;;;; Actor
;;;


(class Actor extends Sprite
  
  
  (slot lookat   <LookAt>    initialize (make-lookat) getter generate)
  (slot velocity <f32vector> initialize (make-vertex) getter generate)
  (slot life     <fx>        initialize 100           accessors generate)
  
  
  (method public (set-lookat l)
    (set-sight~ lookat (get-sight~ l))
    (set-up~ lookat (get-up~ l))
    (set-right~ lookat (get-right~ l)))
  
  
  (method public inline (set-velocity vel <f32vector>) <void>
    (vertex-copy! velocity vel))
  
  
  (method public virtual (stomp)
    #f)
  
  
  ;;;
  ;;;; Tick
  ;;;
  
  
  (method (call-tick commands elapse)
    (parameterize ((tick-actor self))
      (tick-actions commands)
      (continuation-capture
        (lambda (exit)
          (tick commands elapse exit)))))
  
  
  (method protected virtual (tick-actions commands)
    )
  
  
  ;;;
  ;;;; Draw
  ;;;
  
  
  (method override (draw-3d-textured)
    (draw-3d))
  
  
  (method override (draw-3d)
    (glPushMatrix)
    (glTranslatef x y z)
    (glColor4f red green blue alpha)
    (draw-as-cube)
    (glPopMatrix))
  
  
  (method (draw-as-cube)
    (let ((x1 (- radius-x))
          (x2 radius-x)
          (y1 (- radius-y))
          (y2 radius-y)
          (z1 (- radius-z))
          (z2 radius-z))
      (render-block x1 x2 y1 y2 z1 z2 GL_QUADS)))
  
  
  (method (draw-as-sphere rotate?)
    (glPushMatrix)
    (when rotate?
      (glRotatef rtri 1.0 0.0 0.0))
    (glRotatef 90.0 0.0 1.0 0.0)
    (glPolygonMode GL_FRONT_AND_BACK GL_LINE)
    (gl-sphere radius-x 26 52)
    (glPolygonMode GL_FRONT_AND_BACK GL_FILL)
    (glPopMatrix))))
