;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Blocks
;;;


(module world.block jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.jml)
        (jazz.library)
        (jazz.literals)
        (jazz.media)
        (jazz.network)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.dialog)
        (jazz.ui.window)
        (time)
        (world)
        (world.autoload)
        (world.client.window)
        (world.foreign)
        (world.geometry)
        (world.object)
        (world.sprite)
        (world.texture)
        (world.window))


;;;
;;;; Block
;;;


(class Block extends Sprite
  
  
  (slot block-location         <int>    initialize #f accessors generate)
  (slot block-texture-location <int>    initialize #f accessors generate)
  (slot block-shader           <Object> initialize #f accessors generate)
  (slot w                               initialize #f accessors generate)
  
  
  (method override (prepare rest)
    (nextmethod rest)
    (set! width 5.)
    (set! height 5.)
    (set! depth 5.)
    (set! w world)
    (set-texture (get-block-texture~ world))
    (set! block-location (get-block-location~ world))
    (set! block-shader (get-block-shader~ world))
    (set! block-texture-location (get-block-texture-location~ world))
    (set-color (or (get-block-color~ zone) {Color red: 134 green: 82 blue: 1}))))


(class Block-Red extends Block
  
  
  (form
    (<install> color: {Color Red})))


(class Block-Green extends Block
  
  
  (method override (prepare rest)
    (nextmethod rest)
    (set-color {Color Green})))


(class Block-Blue extends Block
  
  
  (method override (prepare rest)
    (nextmethod rest)
    (set-color {Color Blue}))))
