;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Asset
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.asset jazz


(import (jazz.io))


(class Asset extends Object
  
  
  (slot assets getter generate)
  (slot root   getter generate)
  (slot path   getter generate)
  (slot file   getter generate)
  
  
  (method override (initialize assets root path)
    (set! assets~self assets)
    (set! root~self (listify root))
    (set! path~self path)
    (set! file~self (new-file~ (get-directory~ assets) (append root~self path))))
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{l}" path))))
  
  
  (method public (get-name)
    (get-name~ file))
  
  
  (method public (get-base)
    (get-base~ file))
  
  
  (method public (get-unique-spine (extension #f))
    (let ((unique-spine (append (get-unique-spine~ assets) root path)))
      (if (not extension)
          unique-spine
        (append (butlast unique-spine) (list (add-extension (last unique-spine) extension))))))
  
  
  (method public (make-brother extension)
    (make-file~ assets (append root (butlast path) (list (add-extension (last path) extension))))))


(definition public inline (asset=? x <Asset> y <Asset>)
  (pathname=? (get-file~ x) (get-file~ y)))


(definition public (asset-hash asset <Asset>)
  (pathname-hash (get-file~ asset))))
