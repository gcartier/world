;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Sun
;;;


(module world.sun jazz


(import (jazz.jml)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (world)
        (world.draw)
        (world.element)
        (world.entity)
        (world.foreign)
        (world.gadget)
        (world.generate)
        (world.geometry)
        (world.material)
        (world.model)
        (world.object)
        (world.shader))


;;;
;;;; Sun
;;;


(class Sun extends Entity
  
  
  (method override (prepare rest)
    (nextmethod rest)
    (set! width 100.0)
    (set! height 100.0)
    (set! depth 100.0)
    (set! radius 50.)
    (set! color {Color red: .964 green: .859 blue: .005}))
  
  
  (method override (finish rest)
    (nextmethod rest)
    (let ((material (new Material texture: (find-texture~ world "dirty.png"))))
      (set! model (new Model mesh: (generate-sphere 48 24 material: material)))
      (update-matrix)))
  
  
  (method override (update-radius)
    (set! radius-x radius)
    (set! radius-y radius)
    (set! radius-z radius))
  
  
  (method override (entity-program)
    'color)
  
  
  (method override (entity-bind-uniforms program mesh matrix)
    (bind-uniforms~ program mesh matrix color))))
