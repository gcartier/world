;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Profiling
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.profiling jazz


(import (profiler)
        (time))


(definition public (profiling name thunk)
  (define (parse-testing testing)
    (if (symbol? testing)
        (values testing '())
      (values (car testing) (cdr testing))))
  
  (let ((testing (testing)))
    (if (not testing)
        (thunk)
      (receive (what names) (parse-testing testing)
        (if (or (null? names)
                (memq? name names))
            (case what
              ((profile)
               (with-profile name thunk))
              ((memory)
               (with-memory name thunk))
              ((time)
               (debug 'time name)
               (time (thunk))))
          (thunk))))))


;;;
;;;; Memory
;;;


(native bytes-allocated!)


(definition protected memory-allocated
  (make-table test: eq?))

(definition protected memory-called
  (make-table test: eq?))


(definition public with-memory
  (let ((before (make-f64vector 1))
        (after (make-f64vector 1)))
    (lambda (name thunk)
      (bytes-allocated! before)
      (thunk)
      (bytes-allocated! after)
      (let ((allocated (- (f64vector-ref after 0) (f64vector-ref before 0) 128.)))
        (table-set! memory-allocated name (+ (table-ref memory-allocated name 0.) allocated))
        (table-set! memory-called name (+ (table-ref memory-called name 0) 1))))))


(definition public (reset-memory)
  (set! memory-allocated (make-table test: eq?))
  (set! memory-called (make-table test: eq?)))


(definition public (report-memory)
  (for-each (lambda (name)
              (let ((allocated (table-ref memory-allocated name))
                    (called (table-ref memory-called name)))
                (format :console "{s} {r precision: 3}{%}" name (/ allocated called))))
            (sort nu<? (table-keys memory-allocated) key: ->string))))
