;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Movement
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;    Alain Marcotte


(module world.movement jazz


(import (world.geometry.base)
        (world.geometry.classes)
        (world.geometry.syntax (phase syntax))
        (world.homogeneous))


(proclaim (warn optimizations))

(declare (optimize-dead-local-variables))


;;;
;;;; Movement
;;;


(class Movement extends Object
  
  
  (slot origin <vertex> initialize (make-vertex) getter generate)
  (slot vector <vertex> initialize (make-vertex) getter generate)
  (slot normal <vertex> initialize (make-vertex) getter generate)
  (slot length <fl>     initialize (make-fl)     getter generate)
  
  
  (method override (initialize self orig <vertex> vec <vertex>)
    (set-origin self orig)
    (set-vector self vec))
  
  
  (method override (print self output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a} {a} {a}" origin vector length))))
  
  
  (method public (set-origin self orig <vertex>) <void>
    (vertex-copy! origin orig))
  
  
  (method public (set-vector self vec <vertex>) <void>
    (assert (not (vertex-zero? vec)))
    (vertex-copy! vector vec)
    (vertex-normalize-safe! normal vec)
    (fl! length (f64-ref (vertex-norm& vec))))))
