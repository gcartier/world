;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Movement
;;;


(module world.movement jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.library)
        (jazz.literals)
        (jazz.media)
        (jazz.network)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.dialog)
        (jazz.ui.window)
        (world)
        (world.geometry))


(proclaim (warn optimizations))


;;;
;;;; Movement
;;;


(class Movement extends Object
  
  
  (slot origin <f32vector> initialize (make-vertex) getter generate)
  (slot vector <f32vector> initialize (make-vertex) getter generate)
  (slot normal <f32vector> initialize #f getter generate)
  (slot length <fl>        initialize #f getter generate)
  
  
  (method override (initialize orig <f32vector> vec <f32vector>)
    (set-origin orig)
    (set-vector vec))
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a} {a} {a} {a}" origin vector normal length))))
  
  
  (method public (set-origin orig <f32vector>) <void>
    (vertex-copy! origin orig))
  
  
  (method public (set-vector vec <f32vector>) <void>
    (vertex-copy! vector vec)
    (set! normal (vertex-normalize vec))
    (set! length (vertex-norm vec)))
  
  
  (method public (end)
    (vertex+ origin vector))
  
  
  (method public (end-to d)
    (vertex+ origin (vertex-scalar* normal d)))))
