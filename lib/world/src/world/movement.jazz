;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Movement
;;;


(module world.movement jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.library)
        (jazz.literals)
        (jazz.media)
        (jazz.network)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.dialog)
        (jazz.ui.window)
        (world)
        (world.geometry.base)
        (world.geometry.classes)
        (world.geometry.syntax (phase syntax))
        (world.homogeneous)
        (world.syntax (phase syntax)))


(proclaim (warn optimizations))

(declare (optimize-dead-local-variables))


;;;
;;;; Movement
;;;


(class Movement extends Object
  
  
  (slot origin <f32vector> initialize (make-vertex) getter generate)
  (slot vector <f32vector> initialize (make-vertex) getter generate)
  (slot normal <f32vector> initialize (make-vertex) getter generate)
  (slot length <fl>                                 getter generate)
  
  
  (method override (initialize orig <f32vector> vec <f32vector>)
    (debug-allocation Movement)
    (set-origin orig)
    (set-vector vec))
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a} {a} {a}" origin vector length))))
  
  
  (method public (set-origin orig <f32vector>) <void>
    (vertex-copy! origin orig))
  
  
  (method public (set-vector vec <f32vector>) <void>
    (vertex-copy! vector vec)
    (vertex-normalize-safe! normal vec)
    (set! length (f32-ref (vertex-norm& vec))))))
