;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Remote Stubs
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.stub jazz


(import (jazz.presence.syntax (phase syntax))
        (jazz.presence))


;;;
;;;; Master
;;;


(remotable-stub World-Remote-Master
  
  
  (method public call (request-worker-port))
  (method public exec (slave-setup slave cookie))
  (method public exec (slave-ready slave cookie)))


;;;
;;;; Client
;;;


(remotable-stub World-Remote-Client
  
  
  (method public post (server-entered client-id client-no character-name))
  (method public post (server-exited character-name disconnected?))
  (method public post (processor-entered client-id client-no character-name character-avatar character-script player-id player-no player-position player-lookat player-script))
  (method public post (processor-exited character-name))
  (method public post (processor-update sent changes))
  (method public post (processor-draw id color alpha timestamp duration background slide?))
  (method public post (server-message sender kind message))
  (method public post (server-protocol protocol))
  (method public post (peers-update peers))
  (method public post (hierarchy-update hierarchy))
  (method public post (stream-add sender name stream-no origin source-kind video-level channels))
  (method public post (stream-remove stream-no))
  (method public post (action-stream stream-no action arguments))
  (method public post (action-channel channel-no action arguments))
  (method public post (detach-client))
  (method public post (pause-client))
  (method public post (unpause-client))
  (method public post (goto-client time))
  (method public post (camera-client pos lookat))
  (method public post (protocol-client simulate?))
  (method public post (position-client rect))
  (method public post (restore-client))
  (method public post (admin-request requester cookie what action))
  (method public post (admin-result cookie sender name chunk done?)))


;;;
;;;; Server
;;;


(remotable-stub World-Remote-Server
  
  
  (method public call (client-connect client client-uuid character-name character-avatar character-script character-zone character-sphere?))
  (method public call (client-start client))
  (method public call (client-stop client))
  (method public exec (client-disconnect client character-name))
  (method public post (client-alive client))
  (method public post (client-message client kind recipient message))
  (method public post (client-log client time message))
  (method public post (processor-log processor time message))
  (method public call (client-connected-player client no))
  (method public call (client-connected-players client))
  (method public call (client-available-templates client))
  (method public call (client-available-zone-base client from))
  (method public call (client-available-zone-base? client base))
  (method public call (client-create-zone client from base))
  (method public call (client-available-zones client))
  (method public call (client-change-zone client zone))
  (method public call (client-create-group client name persistent?))
  (method public call (client-delete-group client name))
  (method public call (client-disband-group client name))
  (method public call (client-join-group client name))
  (method public call (client-leave-group client name))
  (method public call (client-change-video-level client video-level))
  (method public call (client-register-stream client sender name source-kind video-level channels recipient))
  (method public call (client-unregister-stream client stream-no))
  (method public post (client-stream-action client stream-no action arguments))
  (method public post (client-channel-action client channel-no action arguments))
  (method public call (client-list-group-members name))
  (method public call (client-list-hierarchy))
  (method public call (retrieve-asset path))
  (method public call (register-literal literal))
  (method public call (registered-id id))
  (method public post (tile-server))
  (method public post (restore-server))
  (method public exec (profile-start client))
  (method public post (profile-test client test arguments))
  (method public call (profile-retrieve client))
  (method public exec (profile-stop client))
  (method public call (admin-command client command arguments))
  (method public post (admin-chunk requester cookie sender name chunk done?)))


;;;
;;;; Processor
;;;


(remotable-stub World-Remote-Processor
  
  
  (method public exec (processor-setup server server-path zone))
  (method public post (processor-quit))
  (method public call (client-enter client client-uuid client-id client-no character-name character-avatar character-script))
  (method public exec (client-exit client character-name))
  (method public post (client-update client sent changes))
  (method public call (retrieve-region region-index))
  (method public call (retrieve-chunk region-index chunk-index chunk-digest))
  (method public call (retrieve-entity id))
  (method public exec (pause))
  (method public exec (unpause)))


;;;
;;;; Worker
;;;


(remotable-stub World-Remote-Worker
  
  
  (method public call (process-setup crashes cache optimize? debug? repositories))
  (method public call (process-repositories repositories))
  (method public call (process-unit mode feedback? time? unit-name))
  (method public call (process-script mode path))
  (method public call (process-evaluate mode feedback? syntax str container line col))
  (method public call (process-run mode feedback? syntax str container line col))
  (method public call (process-console unit-name expr))
  (method public call (process-hide))
  (method public post (process-quit))))
