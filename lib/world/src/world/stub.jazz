;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Remote Stubs
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.stub jazz


(import (jazz.presence.syntax (phase syntax))
        (jazz.presence))


;;;
;;;; Master
;;;


(remotable-stub World-Remote-Master
  
  
  (method public send (slave-setup self slave cookie))
  (method public send (slave-ready self slave cookie)))


;;;
;;;; Client
;;;


(remotable-stub World-Remote-Client
  
  
  (method public post (server-entered self client-id client-no character-name))
  (method public post (server-exited self character-name))
  (method public post (server-disconnected self character-name))
  (method public post (server-reconnected self character-name))
  (method public post (processor-entered self client-id client-no character-name character-avatar character-dye character-script player-id player-no player-mode player-position player-lookat player-script))
  (method public post (processor-exited self character-name))
  (method public post (processor-update self sent changes))
  (method public post (processor-draw self id color alpha dts pts duration background slide?))
  (method public post (zone-loaded self zone error-string))
  (method public post (server-invite self sender circle-name require-camera?))
  (method public post (server-accept self recipient circle-name))
  (method public post (server-decline self recipient circle-name))
  (method public post (server-problem self recipient problem))
  (method public post (server-join self recipient))
  (method public post (server-leave self recipient))
  (method public post (server-disband self))
  (method public post (server-message self sender kind message))
  (method public post (server-messages self messages))
  (method public post (mode-update self character-name mode))
  (method public post (world-assets-update self changes))
  (method public post (zone-assets-update self changes))
  (method public post (hierarchy-update self hierarchy))
  (method public post (stream-add self group-no group-require-camera? sender name stream-no origin source-kind video-level channels))
  (method public post (stream-remove self stream-no))
  (method public post (stream-disconnect self stream-no))
  (method public post (stream-channel-init self channel-no caps resolution))
  (method public post (stream-media-on self stream-no media-kind))
  (method public post (stream-media-off self stream-no media-kind))
  (method public post (streaming-update self video-levels))
  (method public post (streamer-update self origin video-level))
  (method public post (action-stream self stream-no action arguments))
  (method public post (action-channel self channel-no action arguments))
  (method public post (detach-client self))
  (method public post (pause-client self))
  (method public post (unpause-client self))
  (method public post (dayduration-client self duration))
  (method public post (daytime-client self time))
  (method public post (goto-client self time))
  (method public post (position-client self rect))
  (method public post (restore-client self))
  (method public post (admin-request self requester requester-name cookie what action))
  (method public post (admin-chunk self cookie sender name chunk done?))
  ;(method public post (admin-run self requester cookie script))
  ;(method public post (admin-return self cookie sender state data))
  )


;;;
;;;; Server
;;;


(remotable-stub World-Remote-Server
  
  
  (method public call (client-connect self client client-uuid personal-key machine-identity machine-caps machine-features character-avatar character-dye character-script))
  (method public call (client-enter self client zone))
  (method public send (client-start self client))
  (method public send (client-stop self client))
  (method public post (client-disconnect self client reason))
  (method public send (client-deconnect self client))
  (method public send (client-reconnection self client zone group))
  (method public call (client-observe self client))
  (method public call (client-play self client))
  (method public call (client-roam self client))
  (method public call (client-anchor self client))
  (method public post (client-sleep self client))
  (method public post (client-wake self client))
  (method public post (client-alive self client))
  (method public call (client-invite self client recipient circle-name))
  (method public call (client-accept self client sender circle-name))
  (method public call (client-decline self client sender circle-name))
  (method public call (client-problem self client sender problem))
  (method public call (client-leave self client))
  (method public call (client-message self client kind recipient message))
  (method public post (client-log self client time message))
  (method public post (processor-log self processor time message))
  (method public call (client-connected-player self client no))
  (method public call (client-connected-players self client))
  (method public call (client-available-templates self client))
  (method public call (client-available-zone-base self client from))
  (method public call (client-available-zone-base? self client base))
  (method public call (client-create-zone self client from base))
  (method public call (client-available-zones self client))
  (method public post (client-load-zone self client zone))
  (method public call (client-change-zone self client zone))
  (method public call (client-changed-zone self client))
  (method public call (client-create-group self client name persistent? require-camera? broadcast-hierarchy? auto-create?))
  (method public call (client-delete-group self client name))
  (method public call (client-join-group self client name mode))
  (method public call (client-rejoin-group self client name/no))
  (method public call (client-leave-group self client name mode))
  (method public call (client-change-video-level self client video-level))
  (method public call (client-register-stream self client sender name source-kind video-level channels recipient))
  (method public call (client-unregister-stream self client stream-no))
  (method public call (client-channel-init self client channel-no caps resolution))
  (method public call (client-media-on self client stream-no media-kind))
  (method public call (client-media-off self client stream-no media-kind))
  (method public post (client-stream-action self client stream-no action arguments))
  (method public post (client-channel-action self client channel-no action arguments))
  (method public call (client-circle-property self circle-name property))
  (method public call (client-change-circle-property self circle-name property value))
  (method public call (client-list-group-members self name))
  (method public call (client-list-hierarchy self))
  (method public call (retrieve-universe-asset self path))
  (method public call (retrieve-world-asset self path))
  (method public post (upload-world-asset self content digest))
  (method public send (update-world-assets self client changes))
  (method public call (register-literal self literal))
  (method public call (registered-id self id))
  (method public post (tile-server self))
  (method public post (restore-server self))
  (method public send (profile-start self client))
  (method public post (profile-test self client test arguments))
  (method public call (profile-retrieve self client))
  (method public send (profile-stop self client))
  (method public call (admin-command self client command arguments))
  (method public post (admin-request-chunk self requester cookie sender name chunk done?))
  ;(method public post (admin-run-return self requester cookie sender state data))
  )


;;;
;;;; Processor
;;;


(remotable-stub World-Remote-Processor
  
  
  (method public send (processor-setup self server server-path processor-id processor-no world-asset-entries zone))
  (method public post (processor-quit self))
  (method public call (client-enter self client client-uuid client-id client-no character-name character-avatar character-dye character-script character-role character-admin?))
  (method public send (client-ready self client))
  (method public call (client-retrieve self client character-name))
  (method public send (client-save self client character-name camera-position camera-lookat))
  @reconnection-too-fragile
  (method public send (client-disconnect self client))
  (method public send (client-reconnect self client))
  (method public send (client-kick self client))
  (method public send (client-exit self client character-name))
  (method public post (client-mode self client mode))
  (method public post (client-update self client sent changes))
  (method public post (world-assets-update self changes))
  (method public call (retrieve-region self region-index))
  (method public call (retrieve-chunk self region-index chunk-index chunk-digest))
  (method public call (retrieve-entity self id))
  (method public call (retrieve-zone-asset self path))
  (method public post (upload-zone-asset self content digest))
  (method public send (update-zone-assets self client changes))
  (method public send (pause self))
  (method public send (unpause self))
  (method public post (attach self debugger))
  (method public post (detach self))
  (method public call (admin-command self client command arguments)))


;;;
;;;; Worker
;;;


(remotable-stub World-Remote-Worker
  
  
  (method public send (process-setup self crashes cache optimize? debug? repositories))
  (method public send (process-connect self))
  (method public post (process-deconnect self uuid))
  (method public call (process-repositories self repositories))
  (method public call (process-unit self mode feedback? time? unit-name))
  (method public call (process-script self mode path))
  (method public call (process-evaluate self mode feedback? syntax str container line col))
  (method public call (process-run self mode feedback? syntax str container line col))
  (method public call (process-console self unit-name expr))))
