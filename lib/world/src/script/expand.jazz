;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Script Dialect Expanders
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module script.expand jazz


(definition protected (expand-define form-src usage-environment macro-environment)
  (assertion (>= (length (source-code form-src)) 2) (error "Wrong number of arguments for define")
    (let ((parameters (cadr (source-code form-src)))
          (body (cddr (source-code form-src))))
      (if (symbol? (source-code parameters))
          (assertion (not-null? body) (error "Wrong number of arguments for define")
            (sourcify-if
              `(%%define ,parameters
                 ,@body)
              form-src))
        (sourcify-if
          `(%%define ,parameters
             (if %%poll-script?
                 (poll-script))
             (let ()
               ,@body))
          form-src)))))


(definition protected (expand-lambda form-src usage-environment macro-environment)
  (assertion (>= (length (source-code form-src)) 2) (error "Wrong number of arguments for lambda")
    (let ((parameters (cadr (source-code form-src)))
          (body (cddr (source-code form-src))))
      (sourcify-if
        `(%%lambda ,parameters
           (if %%poll-script?
               (poll-script))
           (let ()
             ,@body))
        form-src))))


(definition protected (expand-let form-src usage-environment macro-environment)
  (let ((len (length (source-code form-src))))
    (assertion (>= len 2) (error "Wrong number of arguments for let")
      (let ((bindings (cadr (source-code form-src))))
        (if (symbol? (source-code bindings))
            (assertion (>= len 3) (error "Wrong number of arguments for let")
              (let ((symbol bindings)
                    (bindings (caddr (source-code form-src)))
                    (body (cdddr (source-code form-src))))
                (sourcify-if
                  `(%%let ,symbol ,bindings
                     (if %%poll-script?
                         (poll-script))
                     (let ()
                       ,@body))
                  form-src)))
          (let ((body (cddr (source-code form-src))))
            (if (and (pair? (source-code bindings))
                     (symbol? (source-code (car (source-code bindings)))))
                (sourcify-if
                  `(%%let ,bindings
                     (if %%poll-script?
                         (poll-script))
                     (let ()
                       ,@body))
                  form-src)
              (sourcify-if
                `(%%let ,bindings
                   ,@body)
                form-src))))))))


(definition protected (expand-do form-src usage-environment macro-environment)
  (assertion (>= (length (source-code form-src)) 3) (error "Wrong number of arguments for do")
    (let ((bindings (cadr (source-code form-src)))
          (test (caddr (source-code form-src)))
          (body (cdddr (source-code form-src))))
      (sourcify-if
        `(%%do ,bindings ,test
           (if %%poll-script?
               (poll-script))
           (let ()
             ,@body))
        form-src)))))
