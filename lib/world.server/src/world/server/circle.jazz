;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Server Circle
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.server.circle jazz


(import (jazz.component)
        (jazz.io)
        (world.server.group))


(class Server-Circle extends Server-Group
  
  
  (slot name                           getter generate)
  (slot owner                          accessors generate)
  (slot created                        accessors generate)
  (slot persistent?                    accessors generate)
  (slot invite-only?                   accessors generate)
  (slot require-microphone?            accessors generate)
  (slot require-camera?                accessors generate)
  (slot zone                           getter generate)
  (slot stone                          getter generate)
  (slot shape                          accessors generate)
  (slot zoom?                          getter generate)
  (slot link                           accessors generate)
  (slot description                    accessors generate)
  (slot start-time                     getter generate)
  (slot participants    initialize '() accessors generate)
  (slot groups          initialize '() getter generate)
  
  
  (method override (initialize self name owner created persistent? invite-only? require-microphone? require-camera? zone stone shape zoom? link description)
    (nextmethod self self #f)
    (set! self.name name)
    (set! self.owner owner)
    (set! self.created created)
    (set! self.persistent? persistent?)
    (set! self.invite-only? invite-only?)
    (set! self.require-microphone? require-microphone?)
    (set! self.require-camera? require-camera?)
    (set! self.zone zone)
    (set! self.stone stone)
    (set! self.shape shape)
    (set! self.zoom? zoom?)
    (set! self.link link)
    (set! self.description description)
    (set! self.start-time (current-seconds)))
  
  
  (method override (print self output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a}" name))))
  
  
  (method public (get-duration self)
    (- (current-seconds) start-time))
  
  
  (method public (effective-link self sending-to-mobile?)
    (if (and name (not zoom?) sending-to-mobile?)
        (url-encode (format "togethersphere:?join={a}" name))
      link))
  
  
  (method public (has-participants? self)
    (not-null? participants))
  
  
  (method public (add-participant self delegate)
    (set! participants (cons delegate participants)))
  
  
  (method public (remove-participant self delegate)
    (set! participants (remove delegate participants)))
  
  
  (method public (has-groups? self)
    (not-null? groups)))


;;;
;;;; Stored
;;;


(class Client-Circle extends Component
  
  
  (property owner               initialize #f accessors generate)
  (property created             initialize #f accessors generate)
  (property persistent?         initialize #f accessors generate)
  (property invite-only?        initialize #f accessors generate)
  (property require-microphone? initialize #t accessors generate)
  (property require-camera?     initialize #t accessors generate)
  (property zone                initialize #f accessors generate)
  (property stone               initialize #f accessors generate)
  (property shape               initialize #f accessors generate)
  (property zoom?               initialize #f accessors generate)
  (property link                initialize #f accessors generate)
  (property description         initialize #f accessors generate)))
