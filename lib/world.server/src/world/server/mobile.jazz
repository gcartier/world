;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Mobile Server
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.server.mobile jazz


(import (jazz.network)
        (world)
        (world.server)
        (world.settings))


(definition package mobile-server
  #f)

(definition package mobile-server-connect
  #f)

(definition package mobile-service-offset
  50)


(definition package (start-mobile-server mobile-connect)
  (let ((configuration (get-server-configuration)))
    (let ((host (effective-host configuration))
          (service (+ (effective-service configuration) mobile-service-offset)))
      (let ((server (new Mobile-Server host: host service: service)))
        (start server)
        (set! mobile-server server)
        (set! mobile-server-connect mobile-connect)))))


(definition package (stop-mobile-server)
  (when mobile-server
    (stop mobile-server)
    (set! mobile-server #f)))


;;;
;;;; Server
;;;


(class Mobile-Server extends TCP-Server
  
  
  (method override (server-name self)
    'mobile-server)
  
  
  (method override (connection-name self)
    'mobile-connection)
  
  
  (method override (accept-connection self port)
    (mobile-server-connect port)))


;;;
;;;; Delegate
;;;


(class Mobile-Delegate extends Object
  
  
  (slot port getter generate)
  (slot name getter generate)
  
  
  (method override (initialize self port name)
    (set! self.port port)
    (set! self.name name))
  
  
  (method override (print self output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a}" name))))))
