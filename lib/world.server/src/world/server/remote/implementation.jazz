;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Remote Server Implementation
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.server.remote.implementation jazz


(import (world)
        (world.autoload)
        (world.support)
        (world.syntax (phase syntax))
        (world.task))


(class World-Remote-Server extends Object
  
  
  (method public (client-enter client character-name character-avatar)
    (with-task-mutex
      (lambda ()
        (client-enter~ (server-tier) client character-name character-avatar))))
  
  
  (method public (client-exit client character-name)
    (with-task-mutex
      (lambda ()
        (client-exit~ (server-tier) client character-name))))
  
  
  (method public (client-alive client)
    (unless being-debugged?
      (with-task-mutex
        (lambda ()
          (client-alive~ (server-tier) client)))))
  
  
  (method public (client-message client kind recipient message)
    (unless being-debugged?
      (with-task-mutex
        (lambda ()
          (client-message~ (server-tier) client kind recipient message)))))
  
  
  (method public (client-log client time message)
    (with-task-mutex
      (lambda ()
        (client-log~ (server-tier) client time message))))
  
  
  (method public (client-debug client arguments)
    (with-task-mutex
      (lambda ()
        (client-debug~ (server-tier) client arguments))))
  
  
  (method public (processor-debug processor arguments)
    (unless being-debugged?
      (with-task-mutex
        (lambda ()
          (processor-debug~ (server-tier) processor arguments)))))
  
  
  (method public (client-connected-players client)
    (unless being-debugged?
      (with-task-mutex
        (lambda ()
          (client-connected-players~ (server-tier) client)))))
  
  
  (method public (available-zones client)
    (unless being-debugged?
      (with-task-mutex
        (lambda ()
          (available-zones~ (server-tier) client)))))
  
  
  (method public (change-zone client zone)
    (unless being-debugged?
      (with-task-mutex
        (lambda ()
          (change-zone~ (server-tier) client zone)))))
  
  
  (method public (retrieve-asset path)
    (with-task-mutex
      (lambda ()
        (retrieve-asset~ (server-tier) path))))
  
  
  (method public (register-literal literal)
    (with-task-mutex
      (lambda ()
        (register-literal~ (server-tier) literal))))
  
  
  (method public (registered-id id)
    (with-task-mutex
      (lambda ()
        (registered-id~ (server-tier) id))))
  
  
  (method public (tile-server)
    (with-task-mutex
      (lambda ()
        (tile-server~ (server-tier)))))
  
  
  (method public (restore-server)
    (with-task-mutex
      (lambda ()
        (restore-server~ (server-tier)))))))
