;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Evaluate
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.evaluate jazz


;;;
;;;; Update
;;;


(definition public (update-position pos)
  (when (eq? (walk-for) 'eval)
    (if (not ?t)
        (bell)
      (set-position~ ?t pos))))


(definition public (update-color color)
  (when (eq? (walk-for) 'eval)
    (if (not ?t)
        (bell)
      (set-color~ ?t color))))


(definition public (update-alpha alpha)
  (when (eq? (walk-for) 'eval)
    (if (not ?t)
        (bell)
      (let ((color (copy-object~ (get-color~ ?t) #f)))
        (set-alpha~ color alpha)
        (set-color~ ?t color)))))


(definition public (show-target)
  (when (eq? (walk-for) 'eval)
    (if (not ?t)
        (bell)
      (debug ?t))))


(definition public (show-properties)
  (when (eq? (walk-for) 'eval)
    (if (not ?t)
        (bell)
      (for-each (lambda (property)
                  (let ((name (symbolize-property property)))
                    (when (not (memq? name '(before children class-info name-info presentation-info visible?)))
                      (debug name '= (read-property ?t property)))))
                (get-properties~ (class-of ?t)))))))
