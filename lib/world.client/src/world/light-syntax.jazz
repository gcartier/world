;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Light Syntax
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.light-syntax jazz


;;;
;;;; Ambient
;;;


(definition protected (adjust-lighting lighting <f32vector> n <fx> shade <fl>)
  (f32vector-set! lighting n (* shade (+ 12. (* (f32vector-ref lighting n) .8))))
  @w
  (let ((transparent (f32vector-ref lighting 3)))
    (when (> transparent 0.)
      (f32vector-set! lighting n (* shade (+ 12. (* (/ (f32vector-ref lighting n) transparent) 4.))))))
  @w
  (let ((transparent (f32vector-ref lighting 3)))
    (if (= transparent 0.)
        (f32vector-set! lighting n 60.)
      (f32vector-set! lighting n (* shade (+ 12. (* 4. (* (/ transparent 4.) (/ (f32vector-ref lighting n) transparent)))))))))


;;;
;;;; Baked
;;;


(definition protected (baked-light minecraft?)
  (if (not minecraft?)
#/C/
    vec4 baked_light = vec4(lighting, 1.0);
//#
    
#/C/
    float blocklight = lighting.x;
    float skylight = lighting.y;
    float ambience = lighting.z;
    float lighttime = daylight_whatthefuck * 11. + 4.;
    float dimmer = lighttime / 15.;
    skylight = skylight * dimmer;
    float light = max(blocklight, skylight);
    if (player_glow >= 0.)
    {
        float z = distance(player_coord, vertex_coord);
        light = light + ambience * min(60, player_glow / z);
    }
    light = light / 60.;
    // light = pow(.8, (60. - light) / 5.);
    vec4 baked_light = vec4(light, light, light, 1.0);
//#)))
