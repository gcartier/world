;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Element Faces
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is WorldScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2014
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See http://github.com/gcartier/world for details.


(module world.face jazz


(import (world.material)
        (world.polygon))


(definition public (make-face material <Material> texture-coordinates <f32vector> texture-depth <fl> polygon <Polygon>)
  (new Face material texture-coordinates texture-depth polygon))


;;;
;;;; Face
;;;


(class Face extends Object
  
  
  (slot material            <Material>  getter generate)
  (slot texture-coordinates <f32vector> getter generate)
  (slot texture-depth       <fl>        getter generate)
  (slot polygon             <Polygon>   getter generate)
  (slot indice              <fx+>       initialize #f accessors generate)
  
  
  (method override (initialize material <Material> texture-coordinates <f32vector> texture-depth <fl> polygon <Polygon>)
    (nextmethod)
    (assert material)
    (set! material~self material)
    (set! texture-coordinates~self texture-coordinates)
    (set! texture-depth~self texture-depth)
    (set! polygon~self polygon))
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a}" material))))
  
  
  (method public (triangle-count) <fx>
    (triangle-count~ polygon))
  
  
  (method public (add-triangles add)
    (add-triangles~ polygon texture-coordinates texture-depth add))))
