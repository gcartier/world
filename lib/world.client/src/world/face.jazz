;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Element Faces
;;;


(module world.face jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.library)
        (jazz.literals)
        (jazz.media)
        (jazz.network)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.dialog)
        (jazz.ui.window)
        (world)
        (world.foreign)
        (world.geometry)
        (world.texture)
        (time))


(definition public (make-face element texture center radius . triangles)
  (new Face element texture center radius triangles))


;;;
;;;; Face
;;;


(class Face extends Object
  
  
  (slot element   accessors generate)
  (slot texture   accessors generate)
  (slot center    getter generate)
  (slot radius    getter generate)
  (slot triangles getter generate)
  
  
  (method override (initialize element texture center radius triangles)
    (nextmethod)
    (set! element~self element)
    (set! texture~self texture)
    (set! center~self center)
    (set! radius~self radius)
    (set! triangles~self triangles))
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a} {a}" center texture))))
  
  
  ;; gazoum
  (method public (ray-closest-triangle p <f32vector> d <f32vector> filter <procedure+>)
    (let ((closest #f)
          (distance -1.))
      (for-each (lambda (triangle)
                  (let ((normal (get-normal~ triangle)))
                    (when (or (not filter)
                              (filter self normal))
                      (let ((dist (ray-triangle-distance p d (get-v1~ triangle) (get-v2~ triangle) (get-v3~ triangle))))
                        (when (and (/= dist -1.)
                                   (or (= distance -1.)
                                       (< dist distance)))
                          (set! closest (list triangle dist))
                          (set! distance dist))))))
                triangles)
      closest))))
