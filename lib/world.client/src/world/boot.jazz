;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Boot
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.boot jazz


(import (jazz.application)
        (jazz.debuggee)
        (jazz.io)
        (jazz.opengl.glew)
        (jazz.system)
        (jazz.ui.window)
        (world)
        (world.autoload)
        (world.profiling)
        (world.settings)
        (world.support)
        (world.syntax (phase syntax))
        (world.window)
        (world.work))


(definition public (boot-client application-class (start: start #f) (finish: finish #f) (visible?: visible? #t))
  (set-cursor :wait)
  (initialize-aliases)
  (parameterize ((run-loop? #f))
    (setup-profiling)
    (load-point 'boot)
    (boot-environment~ (new application-class))
    (load-point 'app)
    (set-texture-arrays? (world-setting 'world.texture-arrays? (glewIsSupported "GL_EXT_texture_array")))
    (set-arb-multisample? (world-setting 'world.arb-multisample? (glewIsSupported "GL_ARB_multisample")))
    (set-current-world-window (get-toplevel))
    (when start (start))
    (load-point 'world)
    (hide-worker)
    (set-default-context (current-world))
    (set-visible?~ (current-world-window) visible?)
    ;(set-fullscreen-windowed-mode~ (current-world-window))
    ;; quick hack
    (reset-focus~ (current-world-window))
    (set-window-cursor~ (current-world-window) :arrow)
    (load-point 'show)
    ;(setup-memory)
    ;(load-point 'memory)
    (when finish (finish))
    (load-total 'total)
    (run-loop~ (get-application)))))
