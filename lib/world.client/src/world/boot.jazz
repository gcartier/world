;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Boot
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.boot jazz


(import (jazz.application)
        (jazz.debuggee)
        (jazz.io)
        (jazz.opengl.glew)
        (jazz.platform)
        (jazz.window)
        (world)
        (world.autoload)
        (world.profiling)
        (world.settings)
        (world.support)
        (world.syntax (phase syntax))
        (world.window)
        (world.work))


(definition public (boot-client application-class (start: start #f) (finish: finish #f) (visible?: visible? #t))
  (set-cursor :wait)
  (initialize-aliases)
  (parameterize ((run-loop? #f))
    (setup-profiling)
    (load-point 'boot)
    (boot-environment~ (new application-class))
    (load-point 'app)
    (set-texture-arrays? (world-setting 'world.texture-arrays? (glewIsSupported "GL_EXT_texture_array")))
    (set-arb-multisample? (world-setting 'world.arb-multisample? (glewIsSupported "GL_ARB_multisample")))
    (let ((window (get-toplevel)))
      (set-current-world-window window)
      (when start (start))
      (load-point 'world)
      (let ((world (current-world)))
        (hide-worker)
        (set-default-context world)
        @bugged-will-sometimes-leave-the-game-non-responsive
        (when (xor (world-setting 'world.fullscreen? (not (get-controller-debugger))) (shift-down?))
          (set-fullscreen-windowed-mode~ window))
        (set-visible?~ window visible?)
        ;; quick hack
        (reset-focus~ window)
        (set-window-cursor~ window :arrow)
        (load-point 'show)
        ;(setup-memory)
        ;(load-point 'memory)
        (when finish (finish))
        (load-total 'total)
        (set-ready?~ world #t)
        (run-loop~ (get-application)))))))
