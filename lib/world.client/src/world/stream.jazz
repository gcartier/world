;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Stream
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.stream jazz


(import (world)
        (world.context)
        (world.settings))


(definition protected audio-stream
  (world-setting 'world.audio-stream #f))

(definition protected video-stream
  (world-setting 'world.video-stream #f))

(definition protected media-stream
  (world-setting 'world.media-stream #f))


(definition protected streaming?
  (world-setting 'world.streaming? #f))


(definition public (read-frame port)
  (let ((temporary (make-u8vector 8)))
    (read-subu8vector temporary 0 8 port)
    (let ((timestamp (scan-s64 temporary 0)))
      (read-subu8vector temporary 0 8 port)
      (let ((duration (scan-u64 temporary 0)))
        (let ((size (read-32-bit-integer port)))
          (if (eof-object? size)
              (values #f #f #f)
            (let ((buffer (make-u8vector size)))
              (read-subu8vector buffer 0 size port)
              (values buffer timestamp duration))))))))


(definition public (read-audio-header codec port)
  (case codec
    ((opus)
     #f)
    ((vorbis)
     (receive (b1 t1 d1) (read-frame port)
       (receive (b2 t2 d2) (read-frame port)
         (receive (b3 t3 d3) (read-frame port)
           (let ((headers (list (list b1 t1 d1)
                                (list b2 t2 d2)
                                (list b3 t3 d3))))
             (object->u8vector headers)))))))))
