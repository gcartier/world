;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Buffers
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.buffer jazz


(import (jazz.foreign)
        (jazz.opengl.glew)
        (world.foreign))


(proclaim (warn optimizations))


;;;
;;;; Buffer
;;;


(class Buffer extends Object
  
  
  (slot buffer  <int+> initialize #f getter generate)
  (slot size    <fx+>  initialize #f getter generate)
  (slot indices <fx+>  initialize #f getter generate)
  
  
  (method public (bind-buffer self)
    (glBindBuffer GL_ARRAY_BUFFER buffer))
  
  (method public (unbind-buffer self)
    (glBindBuffer GL_ARRAY_BUFFER 0))
  
  
  (method public (bind-feedback-buffer self)
    (glBindBuffer GL_ARRAY_BUFFER buffer)
    (glBindBufferBase GL_TRANSFORM_FEEDBACK_BUFFER 0 buffer))
  
  (method public (unbind-feedback-buffer self)
    (glBindBuffer GL_ARRAY_BUFFER 0))
  
  
  (method public (empty? self)
    (not buffer))
  
  
  ;; Upload data to video card
  (method public (set-data self content sz <fx> floats-per-indice <fx>)
    (set! size sz)
    (set! indices (fxround/ size floats-per-indice))
    (glBindBuffer GL_ARRAY_BUFFER buffer)
    (glBufferDataFloat* GL_ARRAY_BUFFER size content GL_STATIC_DRAW)
    (glBindBuffer GL_ARRAY_BUFFER 0))
  
  
  ;; Setup data in video card
  (method public (setup-feedback-data self sz <fx> floats-per-indice <fx>)
    (set! size sz)
    (set! indices (fxround/ size floats-per-indice))
    (glBindBuffer GL_ARRAY_BUFFER buffer)
    (glBufferData GL_ARRAY_BUFFER (* size float-size) #f GL_STATIC_READ)
    (glBindBuffer GL_ARRAY_BUFFER 0))
  
  
  ;; Upload data to video card
  (method public (set-stream-data self content sz <fx> floats-per-indice <fx>)
    (set! size sz)
    (set! indices (fxround/ size floats-per-indice))
    (glBindBuffer GL_ARRAY_BUFFER buffer)
    (glBufferDataFloat* GL_ARRAY_BUFFER size content GL_STREAM_DRAW)
    (glBindBuffer GL_ARRAY_BUFFER 0))
  
  
  ;; Download data from video card
  (method public (download-stream-data self offset content size <fx>)
    (glBindBuffer GL_ARRAY_BUFFER buffer)
    (glGetBufferSubDataFloat* GL_ARRAY_BUFFER offset size content)
    (glBindBuffer GL_ARRAY_BUFFER 0))
  
  
  ;; Upload data to video card
  (method public (upload-stream-data self offset content size <fx>)
    (glBindBuffer GL_ARRAY_BUFFER buffer)
    (glBufferSubDataFloat* GL_ARRAY_BUFFER offset size content)
    (glBindBuffer GL_ARRAY_BUFFER 0))
  
  
  ;; Enable vertex attrib array before passing values to a shader
  (method public (enable-vertex-attrib self location)
    (glEnableVertexAttribArray location))
  
  ;; Disable vertex attrib array
  (method public (disable-vertex-attrib self location)
    (glDisableVertexAttribArray location))

  
  (method public (draw self)
    (glDrawArrays GL_TRIANGLES 0 indices))
  
  
  ;; Set the vertex attrib pointer to pass to the vertex shader
  (method public (set-attrib-pointer self location size type stride offset)
    (glVertexAttribPointer* location size type GL_FALSE stride offset))
  
  
  (method public (set-attrib-divisor self location divisor)
    (glVertexAttribDivisor location divisor))
  
  
  (method public (generate-buffer self)
    (free-buffer self)
    (set! buffer (glGenBuffers*)))
  
  
  (method public (free-buffer self)
    (when buffer
      (glDeleteBuffers* buffer)
      (set! indices #f)
      (set! size #f)
      (set! buffer #f)))
  
  
  (method override (destroy self)
    (free-buffer self))))
