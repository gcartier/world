;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Quads
;;;


(module world.quad jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.library)
        (jazz.literals)
        (jazz.media)
        (jazz.network)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.dialog)
        (jazz.ui.window)
        (world)
        (world.foreign)
        (world.geometry)
        (world.plane)
        (world.polygon)
        (world.texture)
        (time))


(definition public (make-quad normal v1 v2 v3 v4 t1 t2 t3 t4)
  (new Quad normal v1 v2 v3 v4 t1 t2 t3 t4))


(definition public (make-smooth-quad normal v1 v2 v3 v4 t1 t2 t3 t4 n1 n2 n3 n4)
  (new Smooth-Quad normal v1 v2 v3 v4 t1 t2 t3 t4 n1 n2 n3 n4))


;;;
;;;; Quad
;;;


(class Quad extends Polygon
  
  
  (slot t1     initialize #f getter generate)
  (slot t2     initialize #f getter generate)
  (slot t3     initialize #f getter generate)
  (slot t4     initialize #f getter generate)
  (slot indice initialize #f accessors generate)
  
  
  (method override (initialize normal v1 v2 v3 v4 t1 t2 t3 t4)
    (nextmethod (vector v1 v2 v3 v4) normal)
    (set! t1~self t1)
    (set! t2~self t2)
    (set! t3~self t3)
    (set! t4~self t4))
  
  
  (method override (triangle-count)
    2)
  
  
  (method override (add-triangles add)
    (let ((v1 (get-v1))
          (v2 (get-v2))
          (v3 (get-v3))
          (v4 (get-v4))
          (n1 (get-normal1))
          (n2 (get-normal2))
          (n3 (get-normal3))
          (n4 (get-normal4))
          (t1 (get-t1))
          (t2 (get-t2))
          (t3 (get-t3))
          (t4 (get-t4)))
      (add v1 v2 v3 n1 n2 n3 t1 t2 t3)
      (add v3 v4 v1 n3 n4 n1 t3 t4 t1)))
  
  
  (method override (iterate-triangles proc)
    (let ((v1 (get-v1))
          (v2 (get-v2))
          (v3 (get-v3))
          (v4 (get-v4)))
      (proc v1 v2 v3)
      (proc v3 v4 v1)))
  
  
  (method public (get-v1)
    (vector-ref vertices 0))
  
  (method public (get-v2)
    (vector-ref vertices 1))
  
  (method public (get-v3)
    (vector-ref vertices 2))
  
  (method public (get-v4)
    (vector-ref vertices 3))
  
  
  (method public virtual (get-normal1)
    (get-normal~ plane))
  
  (method public virtual (get-normal2)
    (get-normal~ plane))
  
  (method public virtual (get-normal3)
    (get-normal~ plane))
  
  (method public virtual (get-normal4)
    (get-normal~ plane))
  
  
  (method public (center-of-mass)
    (get-origin~ plane)))


;;;
;;;; Smooth-Quad
;;;


(class Smooth-Quad extends Quad
  
  
  (slot n1 <f32vector> initialize #f getter generate)
  (slot n2 <f32vector> initialize #f getter generate)
  (slot n3 <f32vector> initialize #f getter generate)
  (slot n4 <f32vector> initialize #f getter generate)
  
  
  (method override (initialize normal v1 v2 v3 v4 t1 t2 t3 t4 n1 n2 n3 n4)
    (nextmethod normal v1 v2 v3 v4 t1 t2 t3 t4)
    (set! n1~self n1)
    (set! n2~self n2)
    (set! n3~self n3)
    (set! n4~self n4))
  
  
  (method override (get-normal1)
    n1)
  
  (method override (get-normal2)
    n2)
  
  (method override (get-normal3)
    n3)
  
  (method override (get-normal4)
    n4)))
