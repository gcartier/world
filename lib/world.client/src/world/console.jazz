;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; Billboard Consoles
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.console jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.jml)
        (jazz.opengl.glew)
        (jazz.outline)
        (jazz.text)
        (jazz.ui)
        (jazz.view)
        (world)
        (world.autoload)
        (world.billboard)
        (world.context)
        (world.geometry)
        (world.quad-texture)
        (world.syntax (phase syntax)))


;;;
;;;; Code
;;;


(class Billboard-Code extends Billboard-Element
  
  
  (property entity initialize #f accessors generate))


;;;
;;;; Script
;;;


(definition public (make-billboard-script entity billboard)
  (new Billboard-Script
    billboard: billboard
    entity: entity))


(class Billboard-Script extends Billboard-Code
  
  
  (method override (make-billboard-texture self)
    (let ((width 1200)
          (height 600))
      (let ((w 6.)
            (h (/ 6. 2.)))
        (let ((v1 (vertex (/ w -2.) (/ h  2.) 0.))
              (v2 (vertex (/ w -2.) (/ h -2.) 0.))
              (v3 (vertex (/ w  2.) (/ h -2.) 0.))
              (v4 (vertex (/ w  2.) (/ h  2.) 0.)))
          (let ((quad-texture <Quad-Texture> (make-quad-texture width height v1 v2 v3 v4 min-filter: GL_LINEAR_MIPMAP_LINEAR @mag-filter: GL_NEAREST mipmap?: #t)))
            (let ((texture (get-texture quad-texture)))
              (let ((surface (get-surface texture))
                    (rect (new Rect 0 0 width height))
                    (color {Color red: .000 green: .000 blue: .000 alpha: .5}))
                (clear surface)
                (fill-rect surface rect color)
                (frame-rect surface rect color)
                (let ((view (new world.interface.script:Script-View size: (new Dimension width height))))
                  (set-visible? (locate view 'run) #f)
                  (let ((text (locate view 'text))
                        (script (get-script entity)))
                    (set-string-content text (get-text script)))
                  (let ((pos (center (get-size view) (new Dimension width height))))
                    (set-position view pos)
                    (paint-drawing view surface '())))
                (map-texture texture)))
            quad-texture)))))
  
  
  (method override (billboard-top self)
    2.6)
  
  
  (method override (billboard-center self)
    1.2))


;;;
;;;; Console
;;;


(definition public (make-billboard-console entity billboard)
  (new Billboard-Console
    billboard: billboard
    entity: entity))


(class Billboard-Console extends Billboard-Code
  
  
  (method override (make-billboard-texture self)
    (bind (message point-size) billboard
      (let ((width 600)
            (height 300)
            (point-size (or point-size 36)))
        (let ((w 6.)
              (h 3.))
          (let ((v1 (vertex (/ w -2.) (/ h  2.) 0.))
                (v2 (vertex (/ w -2.) (/ h -2.) 0.))
                (v3 (vertex (/ w  2.) (/ h -2.) 0.))
                (v4 (vertex (/ w  2.) (/ h  2.) 0.)))
            (let ((quad-texture <Quad-Texture> (make-quad-texture width height v1 v2 v3 v4)))
              (let ((texture (get-texture quad-texture)))
                (let ((surface (get-surface texture))
                      (rect (new Rect 0 0 width height))
                      (color {Color red: .000 green: .000 blue: .200 alpha: .25}))
                  (clear surface)
                  (fill-rect surface rect color)
                  (frame-rect surface rect color)
                  (let ((text (if (and (pair? message)
                                       (eq? (car message) '<span>))
                                  `(<span>
                                     ,@(map (lambda (par)
                                              (if (string? par)
                                                  `(<paragraph> (<text> color: White ,par))
                                                par))
                                            (cdr message)))
                                `(<span>
                                   (<paragraph>
                                     (<text> color: White ,(->string message)))))))
                    (let ((view (console-view text point-size)))
                      (let ((pos (center (get-size view) (new Dimension width height))))
                        (set-position view pos)
                        (paint-drawing view surface '()))))
                  (map-texture texture)))
              quad-texture))))))
  
  
  (method override (billboard-top self)
    2.6)
  
  
  (method override (billboard-center self)
    1.2))


;;;
;;;; View
;;;


(definition protected (console-view text point-size)
  (let* ((view (new World-Console-View size: {Dimension 4000 10}))
         (text-view (get-text view))
         (text-model (get-model text-view)))
    (setup-style text-view (new Text-Style font: (new Font font-name: 'tahoma point-size: point-size hint-style: 'slight hint-metrics: 'on) color: {Color White}))
    (set-text text-model text)
    (let ((size (scrollee-content-size text-view))
          (max-width 600))
      (if (< (get-width size) max-width)
          (set-size view (scrollee-content-size text-view))
        (set-size view (new Dimension max-width 10))
        (set-wrap? text-model #t)
        (wrap-content text-model '())
        (set-wrap? text-model #f)
        (set-size view (new Dimension (calculate-contour-scrollee-width text-model) (get-height text-view)))))
    view))


;;;
;;;; World-Console-View
;;;


(class World-Console-View extends Layout-View
  
  
  (form
    (<install>                                     layout-type: fill
      (<Scroller-View>                             hscroll?: #f vscroll?: #f style: tool
        (<!>                         name: content layout-type: fill
          (<World-Console-Text-View> name: text    background: #f editable?: #f selectable?: #f)))))
  
  
  (method public (get-text self)
    (locate self 'text)))


;;;
;;;; World-Console-Text-View
;;;


(class World-Console-Text-View extends Plain-Formatted-Text-View
  
  
  (method override (new-model self)
    (new Formatted-Text-Model base-style: {Text-Style font: {Font Label-User} color: {Color White}} left-padding: 0 top-padding: 0))))
