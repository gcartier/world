;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Obj
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is WorldScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2014
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See http://github.com/gcartier/world for details.


(module world.foreign.obj jazz


(import (jazz.foreign)
        (jazz.platform.types))


(c-declare #<<c-includes
	#include "list.c"
	#include "string_extra.c"
	#include "obj_parser.c"
c-includes
)


(c-external (c-test ) scheme-object
    #<<end-of-c-code
    ___SCMOBJ values = ___EXT(___alloc_scmobj) (___sBOXVALUES, 3*sizeof(___SCMOBJ), ___STILL);
    ___SCMOBJ *ptr = ___CAST(___SCMOBJ*,___BODY(values));
    ptr[0] = ___FIX(4);
    ptr[1] = ___FIX(5);
    ptr[2] = ___FIX(6);
    ___result = values;
    ___EXT(___release_scmobj)(values);
end-of-c-code
)


(c-external (parse-obj char-string) scheme-object
    #<<end-of-c-code
     obj_scene_data data;
     parse_obj_scene(&data, ___arg1);
     
     ___SCMOBJ r = ___EXT(___alloc_scmobj) (___sF64VECTOR, data.face_count*9*3*sizeof(___F64), ___STILL);
     double *ptr = ___CAST(double*,___BODY(r));
     
     obj_face* f;
     obj_vector *v,*n,*t;
     int index = 0;
     int i;
     int j;
     for(i=0; i<data.face_count; i++)
     {
      f = data.face_list[i];
      for(j=0; j<3; j++)
      {
          v = data.vertex_list[f->vertex_index[j]];
          n = data.vertex_normal_list[f->normal_index[j]];
          t = data.vertex_texture_list[f->texture_index[j]];
          ptr[index++] = (double)v->e[0];
          ptr[index++] = (double)v->e[1];
          ptr[index++] = (double)v->e[2];
          ptr[index++] = (double)t->e[0];
          ptr[index++] = (double)t->e[1];
          ptr[index++] = 1.0f;
          ptr[index++] = (double)n->e[0];
          ptr[index++] = (double)n->e[1];
          ptr[index++] = (double)n->e[2];
      }
     }
     
     delete_obj_data(&data);
     ___result = r;
end-of-c-code
))
