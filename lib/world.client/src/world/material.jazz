;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Materials
;;;


(module world.material jazz


(import (jazz.jml)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (world)
        (world.draw)
        (world.element)
        (world.foreign)
        (world.foreign.obj)
        (world.gadget)
        (world.geometry)
        (world.mesh)
        (world.shader))


;;;
;;;; Material
;;;


(class Material extends Object
  
  
  (slot name         <string+>    initialize #f accessors generate)
  (slot ambient      <f32vector+> initialize #f accessors generate)
  (slot diffuse      <f32vector+> initialize #f accessors generate)
  (slot specular     <f32vector+> initialize #f accessors generate)
  (slot emissive     <f32vector+> initialize #f accessors generate)
  (slot shininess    <fl+>        initialize #f accessors generate)
  (slot transparency <fl+>        initialize #f accessors generate)
  (slot mode         <fx+>        initialize #f accessors generate)
  (slot texture      <string+>    initialize #f accessors generate)
  (slot alphamap     <string+>    initialize #f accessors generate)
  
  
  (method override (initialize (name: name #f)
                               (ambient: ambient #f)
                               (diffuse: diffuse #f)
                               (specular: specular #f)
                               (emissive: emissive #f)
                               (shininess: shininess #f)
                               (transparency: transparency #f)
                               (mode: mode #f)
                               (texture: texture #f)
                               (alphamap: alphamap #f))
    (set! name~self name)
    (set! ambient~self ambient)
    (set! diffuse~self diffuse)
    (set! specular~self specular)
    (set! emissive~self emissive)
    (set! shininess~self shininess)
    (set! transparency~self transparency)
    (set! mode~self mode)
    (set! texture~self texture)
    (set! alphamap~self alphamap))))
