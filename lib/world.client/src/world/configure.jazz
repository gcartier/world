;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Configure
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2013
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.configure jazz


(import (jazz.system)
        (world.settings))


(assert (get-application))


(definition public max-render <fl>
  (world-setting 'world.max-render 60.))

(definition public max-render-idle-generate <fl>
  (world-setting 'world.max-render-idle-generate 10.))

(definition public max-render-busy-generate <fl>
  (world-setting 'world.max-render-busy-generate 60.))

(definition public render-generate-threshold <fx>
  (world-setting 'world.render-generate-threshold 5))

(definition public render-stable-delay <fl>
  (world-setting 'world.render-stable-delay .5))

(definition public max-generate <fx>
  (world-setting 'world.max-generate 200))

(definition public max-generate-idle <fx>
  (fxround (/ (cast <fl> max-generate) max-render-idle-generate)))

(definition public max-generate-busy <fx>
  (fxround (/ (cast <fl> max-generate) max-render-busy-generate)))

(definition public player-task?
  (world-setting 'world.player-task? #t))

(definition public player-wait
  (world-setting 'world.player-wait .01))

(definition public tick-task?
  (world-setting 'world.tick-task? #t))

(definition public tick-wait
  (world-setting 'world.tick-wait .01))

(definition public sun-task?
  (world-setting 'world.sun-task? #t))

(definition public sun-wait
  (world-setting 'world.sun-wait .01))


(definition public log?
  (world-setting 'world.log? #t 'default))

(definition public log-heartbeat?
  (world-setting 'world.log-heartbeat? log? 'default)))
