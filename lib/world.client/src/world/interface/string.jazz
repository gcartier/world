;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World String Request
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.interface.string jazz


(import (jazz.graphic)
        (jazz.handler)
        (jazz.jml)
        (jazz.text)
        (jazz.ui)
        (jazz.view))


(class World-String-Request extends View
  

  (form
    (<install>                             size: {Dimension 322 120}
      (<Layout-View>         name: layout  position: {Point 10 30} size: {Dimension 294 35} layout-type: border layout-padding: 10
        (<Label-View>        name: prefix  title: "" location: west font: {Font Label antialias: none} color: {Color red: .809 green: .701 blue: .263} justification: (head -19) auto-size?: width)
        (<Layout-View>                     location: center layout-type: border
          (<Border-View>                   location: center border-type: edge style: entry
            (<Scroller-View>               hscroll?: #f vscroll?: #f
              (<content~>                  layout-type: fill
                (<Text-View> name: text    accepts-returns?: #f left-padding: 1 top-padding: 1 background: #f return-press-handler: {Event-Handler :form on-return-press} escape-press-handler: {Event-Handler :host on-cancel}))))
          (<Label-View>      name: message size: {Dimension 100 16} location: south font: {Font Label} color: {Color Entry-Border} justification: center)))
      (<Push-Button>         name: ok      title: "OK" position: {Point 80 90} size: {Dimension 80 24} default?: #t)
      (<Push-Button>         name: cancel  title: "Cancel" position: {Point 167 90} size: {Dimension 80 24})))

  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method public (get-prefix)
    (get-title~ (locate 'prefix)))
  
  
  (method public (set-prefix value)
    (set-title~ (locate 'prefix) value)
    (layout-view~ (locate 'layout)))
  
  
  ;;;
  ;;;; Events
  ;;;
  
  
  (method override (on-return-press evt)
    (let ((ok (locate 'ok)))
      (when (get-enabled?~ ok)
        (process-action~ ok ok))))
      

  ;;;
  ;;;; Modal
  ;;;

  
  (method override (get-modal-result)
    (get-string-content~ (locate 'text)))))
