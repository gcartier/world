;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Info Pane
;;;


(module world.interface.info jazz


(import (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.library)
        (jazz.literals)
        (jazz.platform)
        (jazz.platform.cairo)
        (world)
        (world.interface)
        (world.interface.pane)
        (world.texture))


(class Info-Pane extends Pane
  
  
  (method override (prepare rest)
    (nextmethod rest)
    (set! texture (make-cairo-texture 500 1280 program: (get-texture-shader~ world) uniform-location: (get-texture-location~ world))))
  
  
  (method override (draw-pane)
    (let ((surface (get-surface~ texture)))
      (set-operator~ surface CAIRO_OPERATOR_CLEAR)
      (paint~ surface)
      (set-operator~ surface CAIRO_OPERATOR_OVER)
      (set-font~ surface {Font font-name: "Courier New" point-size: 10 antialias: none})
      (set-color~ surface {Color Red})
      (let ((rank 0))
        (for-each (lambda (info)
                    (draw-text~ surface 10 (+ 10 (* rank 15)) (->string info))
                    (increase! rank))
                  (debug-info~ world)))
      (map-texture~ texture)
      (glPushMatrix)
      (glTranslatef 0.0 (cast <fl> (- (get-height~ world) 1280.0)) 0.0)
      (textured-quad~ texture
        (lambda () (glVertex3f 0.0 0.0 0.0))
        (lambda () (glVertex3f 500.0 0.0 0.0))
        (lambda () (glVertex3f 500.0 1280.0 0.0))
        (lambda () (glVertex3f 0.0 1280.0 0.0)))
      (glPopMatrix)))))
