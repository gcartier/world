;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Open
;;;


(module world.interface.open jazz


(import (jazz.io)
        (jazz.jml)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.library)
        (jazz.literals)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.view)
        (world)
        (world.interface)
        (world.interface.pane))


(class World-Open extends Pane
  
  
  (form
    (<install>                                            size: {Dimension 420 639} layout-type: border
      (<Border-View>                  name: worlds-border location: center border-type: edge style: entry
        (<Scroller-View>                                  style: document hscroll?: #t vscroll?: #t
          (<content~>                                     layout-type: fill
            (<Tree-Header>                                style: document shown?: #t
              (<content~>
                (<Tree-View>          name: worlds        portfolio: :images filled-column: world
                  (<Tree-Node-Column> name: world         title: "World" width: 235 toplevel-controls?: #f)))))))))
  
  
  (method override (conclude initargs)
    (nextmethod initargs)
    (view-worlds))
  
  
  ;;;
  ;;;; Access
  ;;;
  
  
  (method (get-tree)
    (locate 'worlds))
  
  
  ;;;
  ;;;; Update
  ;;;
  
  
  (method (view-worlds)
    (let ((tree (get-tree)))
      (remove-every-row~ tree)
      (with-update-locked
        (lambda ()
          (for-each (lambda (dir)
                      (add-row~ tree children: (list (new Tree-Node image: {Image-Resource "Document"} title: (get-name~ dir) font: {Font font-name: "Tahoma" point-size: 8 antialias: none} color: {Color White}))
                        user-data: dir))
                    (collect-directories~ {Directory Settings "worlds"}))))))))
