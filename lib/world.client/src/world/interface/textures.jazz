;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Textures
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2013
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.interface.textures jazz


(import (jazz.graphic.opengl.glew)
        (world)
        (world.autoload)
        (world.draw)
        (world.dye)
        (world.dyes)
        (world.entity)
        (world.generate)
        (world.geometry)
        (world.interface)
        (world.interface.showcase)
        (world.material)
        (world.object)
        (world.opengl)
        (world.syntax (phase syntax))
        (world.texture)
        (world.tile))


(definition spacing
  .85)


(class Textures-Showcase extends Showcase
  
  
  (slot textures initialize #f getter generate)
  (slot camera-z initialize 0. getter generate)
  
  
  (method (showcased-textures)
    (or textures
        (let ((world (current-world))
              (z 5.))
          (let ((all (map (lambda (texture)
                            (prog1 (list (find-texture~ world texture) z)
                              (decrease! z spacing)))
                          (table-keys (collect-textures~ world)))))
            (set! textures (list->vector all))
            textures))))
  
  
  (method override (showcase-wheel reversed?)
    (if (not reversed?)
        (decrease! camera-z spacing)
      (increase! camera-z spacing)))


  (method override (draw-showcase)
    (glPushMatrix)
    
    ;; Reset and transform the matrix
    (glMatrixMode GL_MODELVIEW)
    (glLoadIdentity)
    (gluLookAt
      10. 0. camera-z
      -1. 0. camera-z
      0. 1. 0.)
    
    ;; Clear depth buffer
    (glClear GL_DEPTH_BUFFER_BIT)
    
    ;; Textures
    (let ((textures (showcased-textures)))
      (loop (for n from 0 below (vector-length textures))
            (let ((rank n))
              (bind (texture z) (vector-ref textures rank)
                (glPushMatrix)
                (glTranslatef 0. -3.2 z)
                (let ((width .7)
                      (height .7))
                  (textured-quad~ texture
                    (lambda () (glVertex3f 0.0 0.0 height))
                    (lambda () (glVertex3f 0.0 0.0 0.0))
                    (lambda () (glVertex3f 0.0 width 0.0))
                    (lambda () (glVertex3f 0.0 width height))))
                (glPopMatrix)))))
    
    ;; Restore matrix
    (glPopMatrix))))
