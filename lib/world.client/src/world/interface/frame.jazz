;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Frames
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is WorldScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2014
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See http://github.com/gcartier/world for details.


(module world.interface.frame jazz


(import (jazz.jml)
        (jazz.graphic)
        (jazz.ui)
        (world)
        (world.autoload)
        (world.interface.caption)
        (world.interface.panel)
        (world.syntax (phase syntax)))


(definition public (open-frame frame)
  (let ((world (current-world)))
    (let ((interface (get-interface~ world)))
      (set-parent~ frame interface)
      (layout-view~ interface)
      (set-interface?~ world #t)
      (focus-default~ frame))))


;;;
;;;; World-Frame
;;;


(class World-Frame extends World-Panel
  
  
  (form
    (<install>                           layout-type: fill
      (<Border-View>                     location: center border-color: {Color Medium-Gray} border-type: edge style: entry
        (<Layout-View>                   layout-type: border
          (<World-Caption> name: caption size: {Dimension 0 20} location: north)
          (<Content-View>  name: content location: center)))))
  
  
  (method public (get-caption)
    (locate 'caption))
  
  
  (method public (get-content)
    (locate 'content))))
