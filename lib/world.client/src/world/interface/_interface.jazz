;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Interface
;;;


(module world.interface jazz


(import (jazz.jml)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.library)
        (jazz.literals)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.ui)
        (jazz.ui.window)
        (world)
        (world.texture))


(class World-Interface extends Layout-View
  
  
  (form
    (<install> layout-type: justify))
  
  
  (slot texture initialize #f getter generate)
  
  
  (method override (size-change size)
    (nextmethod size)
    (set! texture (make-cairo-texture (get-width~ size) (get-height~ size) program: (get-texture-program~ world) overlay: 0.)))
  
  
  (method (draw-interface)
    (let ((surface (get-surface~ texture))
          (width (cast <fl> (get-width)))
          (height (cast <fl> (get-height)))
          (handle (get-handle~ player)))
      (when (offscreen-region-invalid? handle)
        (set-operator~ surface CAIRO_OPERATOR_CLEAR)
        (paint~ surface)
        (set-operator~ surface CAIRO_OPERATOR_OVER)
        (set-clipper~ surface (new Rect 0 0 width height))
        (paint-drawing surface '())
        (map-texture~ texture)
        (validate-offscreen handle))
      (textured-quad~ texture
        (lambda () (glVertex3f 0.0 0.0 0.0))
        (lambda () (glVertex3f width 0.0 0.0))
        (lambda () (glVertex3f width height 0.0))
        (lambda () (glVertex3f 0.0 height 0.0)))))))
