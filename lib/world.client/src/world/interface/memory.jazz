;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Memory Pane
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2013
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.interface.memory jazz


(import (jazz.jml)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.library)
        (jazz.literals)
        (jazz.platform)
        (jazz.platform.cairo)
        (world)
        (world.autoload)
        (world.interface)
        (world.interface.pane)
        (world.syntax (phase syntax))
        (world.texture))


(class Memory-Pane extends World-Pane
  
  
  (form
    (<install> background: {Color red: .000 green: .000 blue: .000 alpha: .450}))
  
  
  (method override (draw surface context)
    (let ((world (current-world)))
      (receive (last-gc-heap-size last-gc-alloc last-gc-live last-gc-movable last-gc-nonmovable) (process-memory)
        (set-font~ surface {Font Memory^})
        (let ((rank 0))
          (define (draw title bytes)
            (let ((message (format "{a}: {a}m" title (fxfloor/ bytes (* 1024 1024)))))
              (draw-text~ surface 10 (+ 6 (* rank 24)) message {Color Red})
              (increase! rank)))
          
          (draw "Heap" last-gc-heap-size)
          (draw "Live" last-gc-live)
          (draw "Movable" last-gc-movable)
          (draw "Nonmovable" last-gc-nonmovable)))))))
