;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Chat Panel
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.interface.chat jazz


(import (jazz.graphic)
        (jazz.markup)
        (jazz.text)
        (jazz.ui)
        (world)
        (world.context)
        (world.interface.panel)
        (world.interface.text))


;;;
;;;; Panel
;;;


(class Chat-Panel extends World-Panel
  
  
  (form
    (<install>                             size: {Dimension 420 639} background: {Color Black alpha: 0.3} layout-type: fill
      (<Border-View>          name: border border-color: {Color Medium-Gray} border-type: edge style: entry layout-type: fill
        (<Scroller-View>                   style: document hscroll?: #f vscroll?: #t
          (<content~>                      layout-type: fill
            (<Chat-Text-View> name: text   background: #f))))))
  
  
  (method package (show-welcome self welcome)
    (fresh self)
    (insert self welcome 'Welcome)
    (displayed self))
  
  
  (method package (show-whisper self recipient message)
    (fresh self)
    (insert self (format "To [{a}]: " recipient) 'Whisper-Sender)
    (insert self message 'Whisper-Message)
    (displayed self))
  
  
  (method package (show-message self sender kind message)
    (fresh self)
    (case kind
      ((server)
       (insert self "[Server]: " 'Server-Sender)
       (insert self message 'Server-Message)
       (display-message (current-world) (format "[Server]: {a}" message) color: {Color World-Red}))
      ((yell)
       (insert self (format "[{a}]: " sender) 'Yell-Sender)
       (insert self message 'Yell-Message)
       (display-message (current-world) (format "[{a}]: {a}" sender message) color: {Color World-Red}))
      ((whisper)
       (insert self (format "[{a}]: " sender) 'Whisper-Sender)
       (insert self message 'Whisper-Message))
      ((show)
       (insert self (format "[{a}]: " sender) 'Show-Sender)
       (insert self message 'Show-Message))
      ((command)
       (insert self message 'Command-Message))
      (else
       (insert self (format "[{a}]: " sender) 'Say-Sender)
       (insert self message 'Say-Message)))
    (displayed self)
    (when (eq? kind 'whisper)
      (set-last-whisperer (current-world) sender)))
  
  
  (method (fresh self)
    (let ((text (locate self 'text)))
      (let ((model (get-model text))
            (end (text-ending text)))
        (when (/= (get-col end) 0)
          (insert-newline model (tail self))))))
  
  
  (method (insert self string style)
    (let ((text (locate self 'text)))
      (let ((model (get-model text)))
        (insert-styled model (tail self) string style))))
  
  
  (method (displayed self)
    (let ((text (locate self 'text)))
      ;; quick hack
      (scroll text (new Point 0 -10000))
      @wait-this-can-bug
      (ensure-range-displayed text (tail)))
    (set-visible? self #t))
  
  
  (method (tail self)
    (let ((text (locate self 'text)))
      (let ((end (text-ending text)))
        (new Range$Cell$ end end))))
  
  
  (method package (clear self)
    (let ((text (locate self 'text)))
      (empty-text (get-model text)))))


;;;
;;;; Chat-Text-View
;;;


(class Chat-Text-View extends World-Text-View
  
  
  (form
    (<install> editable?: #f selectable?: #f))
  
  
  (method override (new-model self)
    (new Text-Model wrap?: #t left-padding: 1 top-padding: 1))

  
  (method override (install self rest)
    (nextmethod self rest)
    (add-style self 'Welcome {Text-Style Text-Base color: {Color red: .118 green: .943 blue: .122}})
    (add-style self 'Show-Sender {Text-Style Text-Base color: {Color World-Dark-Green}})
    (add-style self 'Show-Message {Text-Style Text-Base color: {Color White}})
    (add-style self 'Command-Message {Text-Style Text-Base color: {Color White}})
    (add-style self 'Say-Sender {Text-Style Text-Base color: {Color World-Ochre}})
    (add-style self 'Say-Message {Text-Style Text-Base color: {Color White}})
    (add-style self 'Whisper-Sender {Text-Style Text-Base color: {Color red: .995 green: .400 blue: .983}})
    (add-style self 'Whisper-Message {Text-Style Text-Base color: {Color White}})
    (add-style self 'Yell-Sender {Text-Style Text-Base color: {Color World-Red}})
    (add-style self 'Yell-Message {Text-Style Text-Base color: {Color White}})
    (add-style self 'Server-Sender {Text-Style Text-Base color: {Color World-Red}})
    (add-style self 'Server-Message {Text-Style Text-Base color: {Color World-Blue}}))))
