;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Chat Pane
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.interface.chat jazz


(import (jazz.graphic)
        (jazz.jml)
        (jazz.text)
        (jazz.ui)
        (world)
        (world.actor)
        (world.interface.inventory)
        (world.interface.pane)
        (world.interface.text)
        (world.interface.tooltip)
        (world.player)
        (world.settings)
        (world.syntax (phase syntax)))


;;;
;;;; Pane
;;;


(class Chat-Pane extends World-Pane
  
  
  (form
    (<install>                           size: {Dimension 420 639} background: {Color Black alpha: 0.3} layout-type: fill
      (<Border-View>                     border-color: {Color Medium-Gray} border-type: edge style: entry layout-type: fill
        (<Scroller-View>                 style: document hscroll?: #f vscroll?: #t
          (<content~>                    layout-type: fill
            (<Chat-Text-View> name: text background: #f))))))
  
  
  (method (show-message sender message)
    (let ((text (locate 'text)))
      (define (at-end)
        (let ((end (text-ending~ text)))
          (new Range$Cell$ end end)))
      
      (let ((model (get-model~ text)))
        (let ((end (text-ending~ text)))
          (when (/= (get-col~ end) 0)
            (insert-newline~ model (at-end)))
          (insert-string~ model (at-end) (format "[{a}]: {a}" sender message))
          ;; quick hack
          (scroll~ text (new Point 0 -10000))
          @wait-this-can-bug
          (ensure-range-displayed~ text (at-end)))))))


;;;
;;;; Chat-Text-View
;;;


(class Chat-Text-View extends World-Text-View
  
  
  (form
    (<install> editable?: #f selectable?: #f))
  
  
  (method override (new-model)
    (new Text-Model wrap?: #t left-padding: 1 top-padding: 1))))
