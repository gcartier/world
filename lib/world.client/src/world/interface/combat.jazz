;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Combat Pane
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.interface.combat jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.jml)
        (world)
        (world.interface.pane)
        (world.interface.tooltip)
        (world.player)
        (world.syntax (phase syntax)))


(class Combat-Pane extends World-Pane
  
  
  (form
    (<install> tooltip?: #t))
  
  
  ;;;
  ;;;; Draw
  ;;;
  
  
  (method override (draw surface context)
    (let ((me (current-me)))
      (let ((title (or (get-name~ me) "Me"))
            (rect {Rect 0 0 160 20}))
        (set-font~ surface {Font font-name: tahoma point-size: 15 shadow: thick})
        (fill-rect~ surface {Rect 0 0 160 21} {Color Black alpha: .4})
        (frame-rect~ surface {Rect 0 0 160 36} {Color Dark})
        (set-color~ surface {Color Dark})
        (line~ surface 0 21 160 21)
        (let ((pos (justify (get-text-extent~ surface title)
                            (rect-size rect)
                            'center)))
          (draw-text~ surface (get-h~ pos) (get-v~ pos) title {Color World-Ochre}))
        (let ((life (get-life~ me)))
          (let ((rect (new Rect 1 22 (+ 0 (fxround (/ (* life 159.) 100.))) 35)))
            (fill-gradient~ surface rect (new Gradient 'vertical {Color Green} {Color Dark-Green})))))))
  
  
  ;;;
  ;;;; Tooltip
  ;;;
  
  
  (method override (get-tooltip-context pos)
    (define (present-text)
      (let ((me (current-me)))
        `(<span>
           (<paragraph>
             (<text> color: World-Green ,(format "{a}/100" (fxround (get-life~ me))))))))
    
    (let ((text (present-text))
          (bounds (get-tooltip-bounds pos)))
      (tooltip-context self text bounds)))))
