;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Tooltips
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.interface.tooltip jazz


(import (jazz.jml)
        (jazz.graphic)
        (jazz.text)
        (jazz.ui)
        (world.interface.documents)
        (world.interface.popup))


(definition protected (tooltip-context view text bounds (padding: padding #f))
  (and text
       (new Tooltip-Context
         view: view
         text: text
         bounds: bounds
         new-view: (tooltip-view padding)
         new-border: tooltip-border)))


(definition protected (tooltip-view padding)
  (lambda (text)
    (let* ((view (new World-Tooltip-Text size: {Dimension 4000 10}))
           (text-view (get-text~ view))
           (text-model (get-model~ text-view))
           (padding (or padding 2)))
      (set-text~ text-model text)
      (let ((size (scrollee-content-size~ text-view))
            (max-width 310))
        (if (< (get-width~ size) max-width)
            (set-size~ view (nu+ (scrollee-content-size~ text-view) (new Dimension padding padding)))
          (set-size~ view (nu+ (new Dimension max-width 10) (new Dimension padding padding)))
          (set-wrap?~ text-model #t)
          (wrap-content~ text-model '())
          (set-wrap?~ text-model #f)
          (set-size~ view (nu+ (new Dimension (+ (calculate-contour-scrollee-width~ text-model) padding) (get-height~ text-view)) (new Dimension padding padding)))))
      view)))


(definition protected (tooltip-border)
  (new Border-View border-type: 'solid border-color: {Color red: .308 green: .381 blue: .448}))


;;;
;;;; World-Tooltip
;;;


(class World-Tooltip extends World-Popup
  
  
  (form
    (<install> layout-type: fill)))


;;;
;;;; World-Tooltip-Text
;;;


(class World-Tooltip-Text extends Layout-View
  
  
  (form
    (<install>                                     layout-type: fill
      (<Scroller-View>                             hscroll?: #f vscroll?: #f style: tool
        (<!>                         name: content layout-type: fill
          (<World-Tooltip-Text-View> name: text    background: #f editable?: #f selectable?: #f)))))
  
  
  (method public (get-text)
    (locate 'text)))


;;;
;;;; World-Tooltip-Text-View
;;;


(class World-Tooltip-Text-View extends World-Formatted-Text-View
  
  
  (method override (get-drawing-background context)
    {Color red: .000 green: .000 blue: .000 alpha: .700})
  
  
  (method override (new-model)
    (new Formatted-Text-Model base-style: {Text-Style font: {Font Label-User} color: {Color White}} left-padding: 4 top-padding: 2))))
