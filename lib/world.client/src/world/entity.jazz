;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Entities
;;;


(module world.entity jazz


(import (jazz.jml)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (world)
        (world.draw)
        (world.element)
        (world.foreign)
        (world.foreign.obj)
        (world.geometry)
        (world.mesh)
        (world.shader))


;;;
;;;; Entity
;;;


(class Entity extends Element
  
  
  (property model  <object> initialize #f accessors generate)
  (property matrix <object> initialize #f accessors generate)
  
  
  (method override (prepare rest)
    (nextmethod rest)
    (set! width 5.)
    (set! height 5.)
    (set! depth 5.)
    (set! color {Color White}))
  
  
  (method override (update-position)
    (nextmethod)
    (update-matrix))
  
  
  (method (update-matrix)
    (set! matrix (matrix-multiply (make-translation-matrix x y z) (make-scaling-matrix radius radius radius))))
  
  
  ;;;
  ;;;; Draw
  ;;;
  
  
  (method override (draw-3d-textured)
    (if (not model)
        (nextmethod)
      (draw-entity)))
  
  
  (method override (draw-3d)
    (if (not model)
        (nextmethod)
      (draw-entity)))
  
  
  (method (draw-entity)
    (let ((mesh (get-mesh~ model))
          (program (find-mesh-program~ world (entity-program))))
      (use~ program)
      (entity-bind-uniforms program mesh matrix)
      (draw-mesh~ program mesh)
      (unbind-uniforms~ program)
      (unuse~ program)))
  
  
  (method protected virtual (entity-program)
    'dynamic-phong)
  
  
  (method protected virtual (entity-bind-uniforms program mesh matrix)
    (bind-uniforms~ program mesh matrix))))
