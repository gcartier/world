;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Lights
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.light jazz


(import (jazz.markup)
        (world.dye)
        (world.dyes)
        (world.gadget)
        (world.geometry))


;;;
;;;; Light
;;;


(class Light extends Gadget
  
  
  (property constant-attenuation  <fl>     initialize 1.     accessors generate)
  (property linear-attenuation    <fl>     initialize 0.     accessors generate)
  (property quadratic-attenuation <fl>     initialize 0.0001 accessors generate)
  (property ambient-color         <object> initialize #f     accessors generate)
  (property specular-color        <object> initialize #f     accessors generate)
  
  
  (method override (prepare self rest)
    (nextmethod self rest)
    (set-scaling self .5)
    (set-model self (light-model self))
    (set-color self white-dye)
    (set! ambient-color black-dye)
    (set! specular-color black-dye))
  
  
  (method protected virtual (light-model self)
    )
  
  
  (method override (print self output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a}" (present-vertex position)))))
  
  
  (method public (get-diffuse-color self)
    color)
  
  
  (method package virtual (render-color self)
    color))


;;;
;;;; Point-Light
;;;


(class Point-Light extends Light
  
  
  (method override (prepare self rest)
    (nextmethod self rest)
    (set! quadratic-attenuation 0.05))
  
  
  (method override (light-model self)
    'Point-Light)
  
  
  (method override (render-color self)
    (dye .4 .4 .4 1.)))


;;;
;;;; Directional-Light
;;;


(class Directional-Light extends Light
  
  
  (form
    (<install> quadratic-attenuation: 0. color: #f32(1. 1. 1. 1.)))
  
  
  (method override (light-model self)
    'Directional-Light)
  
  
  (method override (render-color self)
    (dye .7 .7 .7 1.)))


;;;
;;;; Ambient-Light
;;;


(class Ambient-Light extends Light
  
  
  (form
    (<install> quadratic-attenuation: 0. ambient-color: #f32(1. 1. 1. 1.)))
  
  
  (method override (light-model self)
    'Ambient-Light)
  
  
  (method override (render-color self)
    (dye 1. 1. 1. 1.))))
