;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Models
;;;


(module world.model jazz


(import (jazz.jml)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (world)
        (world.draw)
        (world.element)
        (world.gadget)
        (world.geometry)
        (world.material)
        (world.mesh)
        (world.shader))


;;;
;;;; Model
;;;


(class Model extends Object
  
  
  (slot name      <object> initialize #f accessors generate)
  (slot mesh      <object> initialize #f accessors generate)
  (slot bounds    <object> initialize #f accessors generate)
  (slot animation <object> initialize #f accessors generate)
  
  
  (method override (initialize (name: name #f) (mesh: mesh #f))
    (set! name~self name)
    (set! mesh~self (or mesh (new Mesh))))
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a}" name))))))
