;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Models
;;;


(module world.model jazz


(import (jazz.jml)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (world)
        (world.draw)
        (world.element)
        (world.foreign)
        (world.foreign.obj)
        (world.gadget)
        (world.geometry)
        (world.material)
        (world.mesh)
        (world.shader))


;;;
;;;; Model
;;;


(class Model extends Object
  
  
  (slot mesh <object> initialize #f accessors generate)
  
  
  (method override (initialize (mesh: mesh #f))
    (set! mesh~self (or mesh (new Mesh)))))


;;;
;;;; Obj
;;;


(definition public (load-obj file texture)
  (let ((model (new Model)))
    (let ((mesh (get-mesh~ model)))
      (generate-buffer~ mesh)
      (set-vbo~ mesh (parse-obj (parse~ file)))
      (set-material~ mesh (new Material texture: texture)))
    model)))
