;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Paintings
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2018
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.painting jazz


(import (jazz.geometry)
        (gaea.geometry)
        (world)
        (world.autoload)
        (world.context)
        (world.entity)
        (world.face)
        (world.material)
        (world.model)
        (world.object)
        (world.quad)
        (world.texture))


(definition public (make-painting-model material uv)
  (let ((texture (get-texture material)))
    (let ((width (cast <fl> (get-width texture)))
          (height (cast <fl> (get-height texture))))
      (let ((rw (/ width 1000.))
            (rh (/ height 1000.)))
        ;; adjust for size > 1000
        (let ((adjust (max rw rh 1.)))
          (let ((w (/ width 300. adjust))
                (h (/ height 300. adjust)))
            (let ((bottom (- h))
                  (back (- w))
                  (top h)
                  (front w))
              (let ((tl (uv-left uv))
                    (tt (uv-top uv))
                    (tr (uv-right uv))
                    (tb (uv-bottom uv))
                    (texture-depth (uv-depth uv)))
                (let ((faces
                        (list
                          (make-face material
                                     (f32vector tl tt tl tb tr tb tr tt)
                                     texture-depth
                                     (make-quad #f
                                                (vertex 0. top front) (vertex 0. bottom front) (vertex 0. bottom back) (vertex 0. top back))))))
                  (make-model faces class: Painting-Model bounds: (cuboid 0. bottom back 0. top front) flat?: #t))))))))))


(class Painting-Model extends Model)


(class Painting extends Entity
  
  
  (method override (resolve-model self)
    (let ((world (current-world)))
      (find-painting-safe world model)))))
