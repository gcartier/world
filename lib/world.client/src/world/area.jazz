;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Areas
;;;


(module world.area jazz


(import (jazz.geometry)
        (jazz.graphic)
        (jazz.graphic.opengl.glew)
        (jazz.io)
        (jazz.library)
        (jazz.literals)
        (jazz.media)
        (jazz.network)
        (jazz.platform)
        (jazz.platform.cairo)
        (jazz.runtime)
        (jazz.system)
        (jazz.ui)
        (jazz.ui.dialog)
        (jazz.ui.window)
        (time)
        (world.autoload)
        (world.actor)
        (world.block)
        (world.client)
        (world.foreign)
        (world.geometry)
        (world.history)
        (world.object)
        (world.sprite)
        (world.texture)
        (world.window))


;;;
;;;; Area
;;;


(class Area extends Object
  
  
  (slot actors <list> initialize '() accessors generate)
  (slot blocks <list> initialize '() accessors generate)
  
  
  (method override (print output readably)
    (print-unreadable self output
      (lambda (output)
        (let ((actors (length actors))
              (blocks (length blocks)))
          (format output
                  "{a}{a}"
                  (if (= actors 0) "" (format "{a} actor{a}" actors (format-plural actors)))
                  (if (= blocks 0) "" (format "{a}{a} block{a}" (if (= actors 0) "" ", ") blocks (format-plural blocks))))))))))
