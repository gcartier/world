;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; World Worker Application
;;;


(module world.worker.appl jazz


(import (jazz.event)
        (jazz.library)
        (jazz.platform)
        (jazz.system)
        (jazz.system.application)
        (jazz.ui)
        (jazz.ui.view)
        (jiri.appl)
        (jiri.splash)
        (jiri.work)
        (world.worker))


;;;
;;;; Application
;;;


(class Worker-Application extends Jiri-Application

  
  (method override (process-name)
    "World")
  
  
  (method override (new-toplevel)
    (new Worker-Toplevel))
  
  
  (method override (show-toplevel)
    )
  
  
  (method override (conclude-process)
    (nextmethod)
    @test
    (set-visible?~ (get-toplevel) #t)
    (let ((port (command-argument "port")))
      (if port
          (start-worker-thread port
            (lambda (message)
              (execute-event
                (lambda ()
                  (let ((toplevel (get-toplevel)))
                    (unless (get-visible?~ toplevel)
                      (center-window~ toplevel)
                      (set-visible?~ toplevel #t)))
                  (set-title~ stage-view message))))
            (lambda ()
              (execute-event
                (lambda ()
                  (set-visible?~ (get-toplevel) #f)
                  (set-title~ stage-view "Done")))))
        (message-box "It is incorrect to launch this application")
        (exit 1)))))


;;;
;;;; Toplevel
;;;


(class Worker-Toplevel extends Jiri-Toplevel
  
  
  (method override (effective-title)
    "World")))
