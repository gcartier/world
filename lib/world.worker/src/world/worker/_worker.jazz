;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Worker
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.worker jazz


(import (jazz.evaluate)
        (jazz.io))


(definition protected (process-work)
  (declare (proper-tail-calls))
  (let ((port (open-tcp-client (string->number (command-argument "port")))))
    (let iter ()
         (let ((form (read port)))
           (define (write-expand-unit unit-name)
             (write-result (expand-unit unit-name)))
           
           (define (write-expand-script path)
             (write-result (expand-script path)))
           
           (define (write-expand-forms syntax str container line col evaluation-mode)
             (write-result (evaluate-forms syntax str container line col evaluation-mode expand?: #t)))
           
           (define (write-result result)
             (write-binary-content (list 'result result #f) port))
           
           (define (with-walk-problems thunk)
             (catch (Walk-Problems exc
                      @wait (report-walk-problems~ walk-debugger (get-local-process) (exception-detail exc) walk-cookie)
                      (write-binary-content (list 'error (exception-reason exc) #f) port))
               (thunk)))
           
           (if (or (eof-object? form)
                   (null? form))
               (begin
                 (close-port port)
                 (exit))
             (let ((command (car form))
                   (arguments (cdr form)))
               (case command
                 ((expand-unit)
                  (with-walk-problems
                    (lambda ()
                      (apply write-expand-unit arguments))))
                 ((expand-script)
                  (with-walk-problems
                    (lambda ()
                      (apply write-expand-script arguments))))
                 ((expand-forms)
                  (with-walk-problems
                    (lambda ()
                      (apply write-expand-forms arguments))))
                 (else
                  (error "Unknown worker command" command)))
               (iter))))))))
