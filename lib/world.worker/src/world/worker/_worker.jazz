;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Worker
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2015
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.worker jazz


;; hack that should not be necessary but else hangs
(definition (exit-safe)
  (with-exception-handler
    (lambda (exc)
      (call-with-output-file "~/exit.exception"
        (lambda (port)
          (write exc port)
          (continuation-capture
            (lambda (k)
              (display-continuation-backtrace k port #f #f 500 500)))
          (newline port)
          (force-output port)))
      (clear-exit-jobs!)
      (exit))
    (lambda ()
      (exit))))


(definition protected (process-work)
  (declare (proper-tail-calls))
  (let ((port (open-tcp-client (string->number (command-argument "port")))))
    (let iter ()
         (let ((form (read port)))
           (define (write-expand-unit unit-name)
             (write-binary-content (expand-unit unit-name) port))
           
           (define (write-expand-script path)
             (write-binary-content (expand-script path) port))
           
           (if (or (eof-object? form)
                   (null? form))
               (begin
                 (close-port port)
                 (exit-safe))
             (let ((command (car form))
                   (arguments (cdr form)))
               (case command
                 ((expand-unit)
                  (write-expand-unit (car arguments)))
                 ((expand-script)
                  (write-expand-script (car arguments)))
                 (else
                  (error "Unknown subprocess command" command)))
               (iter))))))))
