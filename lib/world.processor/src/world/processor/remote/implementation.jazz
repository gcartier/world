;;;===============
;;;  WorldScheme
;;;===============
;;;
;;;; World Remote Processor Implementation
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 2012-2016
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):


(module world.processor.remote.implementation jazz


(import (jazz.jrm)
        (world)
        (world.autoload)
        (world.processor)
        (world.support)
        (world.syntax (phase syntax))
        (world.task)
        (world.work))


(class World-Remote-Processor extends Object
  
  
  (method public (processor-setup master cookie server server-name zone worker)
    (processor-setup~ (current-processor) master cookie server server-name zone worker))
  
  
  (method public (processor-quit)
    (processor-quit~ (current-processor)))
  
  
  (method public (client-join client client-id client-no character-name character-avatar)
    (client-join~ (current-processor) client client-id client-no character-name character-avatar))
  
  
  (method public (client-leave client character-name)
    (client-leave~ (current-processor) client character-name))
  
  
  (method public (client-update client sent changes)
    (unless being-debugged?
      (with-task-mutex
        (lambda ()
          (client-update~ (current-processor) client sent changes)))))
  
  
  (method public (retrieve-region region-x region-y region-z)
    (with-task-mutex
      (lambda ()
        (retrieve-region~ (current-processor) region-x region-y region-z))))
  
  
  (method public (retrieve-chunk region-x region-y region-z chunk-x chunk-z chunk-digest)
    (with-task-mutex
      (lambda ()
        (retrieve-chunk~ (current-processor) region-x region-y region-z chunk-x chunk-z chunk-digest))))))
