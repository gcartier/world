{Formatted-Text
 formats:
 ({Format Base}
  {Format Heading1}
  {Format Base left-margin: 16 bulleted?: #t}
  {Format Base left-margin: 48 bulleted?: #t}
  {Format Heading2}
  {Format Base left-margin: 0 bulleted?: #f}
  {Format Heading2 left-margin: 16 bulleted?: #t}
  {Format Heading2 left-margin: 48 bulleted?: #t}
  {Format Heading2 left-margin: 80 bulleted?: #t}
  {Format Heading2 left-margin: 112 bulleted?: #t}
  {Format Heading2 left-margin: 0 bulleted?: #f})

 styles:
 ({Text-Style Base}
  {Text-Style Heading1}
  {Text-Style Heading2})

 paragraphs:
 ((1 ("TODO" 1))
  (1)
  (1)
  (4 ("Window" 2))
  (2 ("Window resize" 0))
  (3 ("For now we only update the current world when resizing" 0))
  (2 ("Fullscreen" 0))
  (2 ("Not play keyboard events when application is inactive" 0))
  (0)
  (0)
  (4 ("Projection" 2))
  (2 ("Relate orthographic and perspective zooming (AM)" 0))
  (0)
  (5)
  (4 ("Camera" 2))
  (2 ("Limit strafing to game boundaries (AM)" 0))
  (3 ("Vertical boundary will solve block starting at exactly floor level" 0))
  (2 ("Need to ensure that there is no object between the camera and the player" 0))
  (0)
  (0)
  (4 ("Lighting" 2))
  (2 ("Improve lighting" 0))
  (0)
  (0)
  (4 ("Keyboard" 2))
  (0)
  (0)
  (4 ("Editor" 2))
  (6 ("Should we highlight the plane intersection square when moving the mouse?" 0))
  (5)
  (0)
  (4 ("History" 2))
  (2 ("Integrate non-actor state like:" 0))
  (3 ("World win/lose state" 0))
  (3 ("Color of win block" 0))
  (2 ("Try rendering non-now as a dimmed version" 0))
  (2 ("Save history to file (save in snapshot!?)" 0))
  (2 ("Add some (optional!?) history max" 0))
  (0)
  (0)
  (4 ("Live" 2))
  (6 ("Integrate to Jedi" 0))
  (5)
  (5)
  (4 ("Evaluate" 2))
  (2 ("Add / remove / modify slots" 0))
  (2 ("Support for top-down code that calls a not yet defined method" 0))
  (0)
  (0)
  (4 ("Areas" 2))
  (6 ("Fix areas regressions" 0))
  (7 ("Need to recalculate the areas for every actor when moving in history" 0))
  (7 ("Need to update areas when editing" 0))
  (0)
  (0)
  (4 ("Hit Test" 2))
  (2 ("Do I do the trivial test of not calling hit testing when there is no movement?" 0))
  (2 ("For a very large game, I suppose the engine won't be moving unimportant mobs like wolves if there is no player near!?" 0))
  (2 ("Need to return the minimum value, e.g. continue iterating in case another objects is even closer" 0))
  (3 ("Return all objects hit that are at the minimal value" 0))
  (2 ("Maybe my heuristic approach should be based on the vector of the movement!?" 0))
  (3 ("For example, if we move .5 in x and .2 in y, then favor the x when there is conflicting solutions!?" 0))
  (0)
  (0)
  (4 ("World" 2))
  (6 ("Use components to save / load the world!?" 0))
  (7 ("I think the best approach is to still use the Jazz module system" 0))
  (8 ("Gives us identification of classes and forms" 0))
  (8 ("Enables everything to be compiled or interpreted" 0))
  (7 ("Add a define-form!?" 0))
  (8 ("Could be referenced from a form (<f>) " 0))
  (8 ("Represents the structure but without the inheritence or behavior changes" 0))
  (6 ("Think about object composition" 0))
  (7 ("How can we make the player a sphere, composed from other objects, ..." 0))
  (0)
  (0)
  (4 ("Engine" 2))
  (6 ("To implement that the floor is always at the bottom of the screen in orthogonal projection for 2d games we need to do more that doing nothing as we currently do, as a resize that is not proportional will create problems" 0))
  (6 ("It pretty boils down to interpolation vs simulation" 0))
  (7 ("A good example that doesn't work well with interpolation is gravity" 0))
  (8 ("A jump that lags and is interpolated can make us miss the intended platform" 0))
  (7 ("A simulation approach where we redo the small ticks we missed solves the previous problem" 0))
  (8 ("But will not work if we are really getting behind in TPS" 0))
  (7 ("Maybe choose approach based on TPS!?" 0))
  (7 ("Is this interpolation vs simulation logic extensible to the problem of managing lag in a network game?" 0))
  (10)
  (10)
  (4 ("OpenGL" 2))
  (6 ("Look into using VBO" 0))
  (10)
  (10)
  (4 ("Gaia" 2))
  (6 ("Jedi binaries" 0))
  (6 ("World binaries" 0))
  (7 ("Include Jazz binaries!?" 0))
  (6 ("Focus on interpreted development" 0))
  (7 ("Make sure it can be compiled if the build environment is available" 0))
  (10)
  (10)
  (4 ("Game" 2))
  (6 ("Add boost pills on the floor that can be used to go faster, jump higher, ..." 0))
  (0)
  (0)
  (4 ("Look" 2))
  (2 ("Character as a sphere!?" 0))
  (3 ("Add blinking eyes showing the direction!?" 0))
  (2 ("Add anti-aliasing to line in 3d!?" 0))
  (5)
  (5)
  (4 ("Foreing" 2))
  (6 ("OpenGL has functions that take a vector as parameter like glVertex3fv. Maybe this could be used by using homogenous vectors of floats!?" 0))
  (0)
  (0)
  (4 ("Memory" 2))
  (6 ("Add a flag to report gc occurences" 0))
  (6 ("Use Gambit's ##add-gc-interrupt-job and ##process-statistics (field 14) to add a GC counter!" 0))
  (6 ("With this counter, optimize memory usage" 0))
  (0)
  (0)
  (4 ("Network" 2))
  (6 ("Multi-player over network" 0))
  (0)
  (0)
  (4 ("Platforms" 2))
  (2 ("Port to other platforms" 0))
  (3 ("Can glut be used without any sacrifice?" 0))
  (2 ("Port to mobiles" 0))
  (3 ("Be wary of Cairo uses" 0))
  (3 ("Be extra wary of Jazz UI uses" 0))
  (0)
  (0)
  (4 ("Notes" 2))
  (6 ("In first person mode, with the camera far away and perpendicular to a flat level" 0))
  (7 ("When we then move in the level, the camera automatically follows exactly like in orthographic projection!" 0))
  (0))}
